{"version":3,"sources":["utils/common-functions.js","components/row.js","components/table.js","components/level.js","constants.js","components/choropleth.js","components/mapexplorer.js","components/timeseries.js","utils/hooks.js","components/minigraph.js","components/home.js","components/navbar.js","components/links.js","components/faq.js","components/banner.js","components/patientsview.js","components/patients.js","components/downloadblock.js","components/patientdb.js","components/Charts/genderchart.js","components/Charts/agechart.js","components/Charts/nationalitychart.js","components/Charts/allstates.js","components/Charts/totalconfirmedchart.js","components/Charts/dailyconfirmedchart.js","components/deepdive.js","components/resourcetable.js","components/resources.js","App.js","serviceWorker.js","index.js"],"names":["months","stateCodes","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DD","DL","JK","LA","LD","PY","formatDate","unformattedDate","day","slice","month","year","time","formatDateAbsolute","preprocessTimeseries","timeseries","data","today","Date","setHours","dataTypes","filter","d","every","dt","date","Number","getFullYear","validateCTS","map","stat","totalconfirmed","totalrecovered","totaldeceased","dailyconfirmed","dailyrecovered","dailydeceased","formatNumber","value","shrinkNumbers","numberFormatter","Intl","NumberFormat","number","isNaN","format","length","replace","parseStateTimeseries","states_daily","statewiseSeries","Object","keys","reduce","a","c","moment","i","isBefore","entries","forEach","k","v","stateCode","toLowerCase","prev","push","toDate","Row","props","useState","state","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","sortColumn","localStorage","getItem","isAscending","sortData","setSortData","useEffect","handleReveal","sortDistricts","useCallback","aDistricts","sorted","sort","district1","district2","value1","parseInt","confirmed","value2","comparisonValue","key","handleSort","column","setItem","Fragment","className","total","onMouseEnter","onHighlightState","index","onMouseLeave","onTouchStart","onClick","style","background","fontWeight","reveal","display","to","color","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","colSpan","title","parse","lastupdatedtime","formatDistance","e","window","innerWidth","district","onHighlightDistrict","delta","Unknown","Table","states","setStates","revealedStates","setRevealedStates","count","setCount","summary","s","stateDistrictWiseData","currentsortColumn","currentTarget","querySelector","getAttribute","totalRow","splice","StateData1","StateData2","unshift","doSort","animationDelay","ref","forwardRef","districtData","Level","setData","setConfirmed","setActive","recoveries","setRecoveries","setDeaths","deltas","setDeltas","parseData","MAP_TYPES","propertyFieldMap","country","ChoroplethMap","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","setSelectedRegion","choroplethMap","useRef","svgRenderCount","setSvgRenderCount","ready","geoData","d3","remove","propertyField","mapType","svg","current","width","attr","height","topology","topojson","objects","graphObjectName","projection","fitSize","fitExtent","path","onceTouchedRegion","append","selectAll","features","enter","n","properties","maxConfirmed","on","name","err","console","log","handleMouseover","text","parseFloat","toFixed","toString","toTitleCase","str","split","charAt","toUpperCase","join","renderData","cells","label","domain","genLength","generatedLabels","labelDelimiter","Math","floor","n1","n2","Array","from","legendLinear","legendColor","shapeWidth","shapeHeight","titleWidth","labels","orient","scale","select","call","geoDataFile","prevCount","classed","nodes","parentNode","appendChild","id","viewBox","preserveAspectRatio","India","Assam","Bihar","Chandigarh","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Lakshadweep","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Puducherry","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","getRegionFromState","region","MapExplorer","stateTestData","regionHighlighted","onMapHighlightChange","panelRegion","setPanelRegion","currentHoveredRegion","setCurrentHoveredRegion","testObj","setTestObj","currentMap","setCurrentMap","useMemo","currentMapData","acc","districtWiseData","find","getRegionFromDistrict","undefined","newMap","switchMapToState","topDistrict","b","obj","totaltested","updatedon","href","source","target","TimeSeries","Infinity","lastDaysCount","setLastDaysCount","setTimeseries","datapoint","setDatapoint","setIndex","mode","setMode","logMode","setLogMode","type","chartType","setChartType","moving","setMoving","svgRef1","svgRef2","svgRef3","wrapperRef","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","observer","entry","contentRect","observe","unobserve","useResizeObserver","slicedTimeseries","days","sliceTimeseriesFromEnd","graphData","ts","margin","chartRight","chartBottom","T","svg1","svg2","svg3","dateMin","setDate","getDate","dateMax","yScales","xScale","clamp","range","numTicksX","xAxis","g","ticks","yAxis","yScale","tickPadding","svgArray","plotTotal","dataTypesTotal","dataTypesDaily","colors","uniformScaleMin","min","yScaleUniformLinear","max","nice","yScaleUniformLog","yScaleLinear","yScaleLog","yScaleDailyUniform","focus","t","transition","duration","typeTotal","typeDaily","empty","reverse","node","getTotalLength","p","getPointAtLength","x","y","repeat","curve","mousemove","mouseout","xm","this","invert","bisectDate","left","f","j","focusDate","dateStr","isSame","subtract","chartKey1","chartKey2","chartKey3","currentStatusCount","currentDiff","formatedDiff","aria-label","Minigraph","timeSeriesData","setTimeSeriesData","graphElement1","graphElement2","graphElement3","graphElement4","svg4","y1","path1","datum","totalLength1","delay","path2","totalLength2","path3","totalLength3","path4","totalLength4","Home","setStateDistrictWiseData","setStateTestData","fetched","setFetched","graphOption","setGraphOption","lastUpdated","setLastUpdated","activeStateCode","setActiveStateCode","activityLog","setActivityLog","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","setRegionHighlighted","getStates","Promise","all","axios","get","stateDistrictWiseResponse","statesDailyResponse","updateLogResponse","statewise","cases_time_series","testData","states_tested_data","totalTest","tested","updatetimestamp","totalindividualstested","statecode","refs","htmlFor","checked","onChange","event","disabled","JSON","stringify","selected","activity","update","timestamp","dangerouslySetInnerHTML","__html","Navbar","menuVisible","setMenuVisible","location","pathname","alt","src","pages","page","pageLink","animationDelayForNavbar","displayName","Links","rel","FAQ","faq","setFaq","getFAQs","scrollTo","then","response","catch","error","question","answer","Banner","snippets","setSnippets","snippet","setSnippet","factoids","random","snippetChooser","interval","setInterval","clearInterval","banner","PatientsView","logs","patient","indexTwo","applyClass","setModal","setPatient","expand","patientnumber","Patients","patients","setPatients","setLogs","modal","onclick","document","getElementById","body","classList","add","parseByDate","dateannounced","list","colorMode","gender","typeoftransmission","nationality","getClassNameFn","patientIndexArg","patientIndex","switchPatient","contractedfromwhichpatientsuspected","detectedcity","detecteddistrict","detectedstate","agebracket","statepatientnumber","notes","source1","source2","source3","CSVDownloadLink","csv","Parser","encodeURIComponent","download","DownloadBlock","dataJSON","filterByObject","filters","PatientDB","filteredPatients","setFilteredPatients","setError","useLocation","setColorMode","scaleMode","setScaleMode","subDays","setFilters","raw_data","fetchRawData","handleFilters","newFilters","city","selectedIndex","getSortedValues","setValues","Set","size","GenderChart","defaults","global","tooltips","intersect","position","backgroundColor","displayColors","borderColor","borderWidth","titleFontColor","bodyFontColor","caretPadding","legend","hover","male","female","unknown","chartData","datasets","chartOptions","layout","padding","right","top","bottom","events","responsive","maintainAspectRatio","callbacks","tooltipItem","dataset","datasetIndex","_meta","currentValue","options","AgeChart","ages","fill","age","scales","xAxes","stacked","gridLines","yAxes","NationalityChart","hasOwnProperty","AllStatesChart","dates","elements","line","statesData","Map","status","trim","has","set","previousValue","sortedMap","code","borderCapStyle","pointBackgroundColor","pointHoverRadius","point","radius","tension","beginAtZero","precision","scaleLabel","labelString","unit","tooltipFormat","stepSize","displayFormats","millisecond","second","minute","hour","week","quarter","TotalConfirmedChart","deceased","callback","values","DailyConfirmedChart","barDataSet","DeepDive","rawData","setRawData","statesTimeSeries","setStatesTimeSeries","rawDataResponse","stateDailyResponse","usePanelSummaryStyles","makeStyles","theme","content","flexDirection","justifyContent","root","usePanelStyles","marginBottom","useItemTextStyles","primary","fontFamily","fontStyle","fontSize","fontTransform","secondary","getFormattedLink","initialValue","s3","FormattedCell","editable","React","setValue","reurl1","reinsta","refb","ResourceTable","columns","isDesktop","classesPannelSummary","classesPanel","classesListItemText","defaultColumn","Cell","useTable","initialState","pageIndex","pageSize","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","row","getRowProps","cell","getCellProps","defaultValue","ExpansionPanel","classes","ExpansionPanelSummary","maxWidth","textAlign","ExpansionPanelDetails","List","disablePadding","dense","ListItem","alignItems","divider","ListItemText","Resources","setCity","category","setCategory","indianstate","setIndianState","resourcedict","setResourceDict","showTable","setShowTable","setIsDesktop","getResources","checkForResizeEvent","addEventListener","removeEventListener","hashmap","resources","isArray","memocols","Header","accessor","changedstateevent","hidden","changedcityevent","changedcategoryevent","citydata","element","pointerEvents","history","require","createBrowserHistory","App","view","exact","component","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","registration","unregister","message"],"mappings":"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","file":"static/js/main.e23cee70.chunk.js","sourcesContent":["import moment from 'moment';\n\nconst months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec',\n};\n\nconst stateCodes = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DN: 'Dadra and Nagar Haveli',\n  DD: 'Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n};\n\nexport const getStateName = (code) => {\n  return stateCodes[code.toUpperCase()];\n};\n\nexport const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+05:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const time = unformattedDate.slice(11);\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\n};\n\nconst validateCTS = (data = []) => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const dataTypes = [\n    'dailyconfirmed',\n    'dailydeceased',\n    'dailyrecovered',\n    'totalconfirmed',\n    'totaldeceased',\n    'totalrecovered',\n  ];\n  return data\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\n    .filter((d) => {\n      const year = today.getFullYear();\n      return new Date(d.date + year) < today;\n    });\n};\n\nexport const preprocessTimeseries = (timeseries) => {\n  return validateCTS(timeseries).map((stat) => ({\n    date: new Date(stat.date + ' 2020'),\n    totalconfirmed: +stat.totalconfirmed,\n    totalrecovered: +stat.totalrecovered,\n    totaldeceased: +stat.totaldeceased,\n    dailyconfirmed: +stat.dailyconfirmed,\n    dailyrecovered: +stat.dailyrecovered,\n    dailydeceased: +stat.dailydeceased,\n  }));\n};\n\n/**\n * Returns the last `days` entries\n * @param {Array<Object>} timeseries\n * @param {number} days\n *\n * @return {Array<Object>}\n */\nexport function sliceTimeseriesFromEnd(timeseries, days) {\n  return timeseries.slice(-days);\n}\n\nexport const formatNumber = (value, shrinkNumbers) => {\n  const numberFormatter = new Intl.NumberFormat('en-IN');\n  const number = isNaN(value) ? '-' : numberFormatter.format(value);\n  return shrinkNumbers && number.length > 7\n    ? `${number.replace(',', '').slice(0, -4)}K`\n    : number;\n};\n\nexport const parseStateTimeseries = ({states_daily: data}) => {\n  const statewiseSeries = Object.keys(stateCodes).reduce((a, c) => {\n    a[c] = [];\n    return a;\n  }, {});\n\n  const today = moment();\n  for (let i = 0; i < data.length; i += 3) {\n    const date = moment(data[i].date, 'DD-MMM-YY');\n    // Skip data from the current day\n    if (date.isBefore(today, 'Date')) {\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\n        const stateCode = k.toLowerCase();\n        const prev = v[v.length - 1] || {};\n        v.push({\n          date: date.toDate(),\n          dailyconfirmed: +data[i][stateCode] || 0,\n          dailyrecovered: +data[i + 1][stateCode] || 0,\n          dailydeceased: +data[i + 2][stateCode] || 0,\n          totalconfirmed: +data[i][stateCode] + prev.totalconfirmed || 0,\n          totalrecovered: +data[i + 1][stateCode] + prev.totalrecovered || 0,\n          totaldeceased: +data[i + 2][stateCode] + prev.totaldeceased || 0,\n        });\n      });\n    }\n  }\n\n  return statewiseSeries;\n};\n","import React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  formatNumber,\n} from '../utils/common-functions';\nimport {formatDistance} from 'date-fns';\nimport {Link} from 'react-router-dom';\n\nfunction Row(props) {\n  const [state, setState] = useState(props.state);\n  const [districts, setDistricts] = useState(props.districts);\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('district.sortColumn')\n      ? localStorage.getItem('district.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('district.isAscending')\n      ? localStorage.getItem('district.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    setState(props.state);\n  }, [props.state]);\n\n  useEffect(() => {\n    setDistricts(props.districts);\n    setSortedDistricts(props.districts);\n  }, [props.districts]);\n\n  const handleReveal = () => {\n    props.handleReveal(props.state.state);\n  };\n\n  const sortDistricts = useCallback(\n    (aDistricts) => {\n      const sorted = {};\n      if (aDistricts) {\n        Object.keys(aDistricts)\n          .sort((district1, district2) => {\n            const sortColumn = sortData.sortColumn;\n            const value1 =\n              sortColumn === 'district'\n                ? district1\n                : parseInt(aDistricts[district1].confirmed);\n            const value2 =\n              sortColumn === 'district'\n                ? district2\n                : parseInt(aDistricts[district2].confirmed);\n            const comparisonValue =\n              value1 > value2\n                ? 1\n                : value1 === value2 && district1 > district2\n                ? 1\n                : -1;\n            return sortData.isAscending\n              ? comparisonValue\n              : comparisonValue * -1;\n          })\n          .forEach((key) => {\n            sorted[key] = aDistricts[key];\n          });\n        setSortedDistricts(sorted);\n      }\n    },\n    [sortData.isAscending, sortData.sortColumn]\n  );\n\n  const handleSort = (column) => {\n    const isAscending =\n      sortData.sortColumn === column\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'district';\n    setSortData({\n      sortColumn: column,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('district.sortColumn', column);\n    localStorage.setItem('district.isAscending', isAscending);\n  };\n\n  useEffect(() => {\n    sortDistricts(districts);\n  }, [districts, sortData, sortDistricts]);\n\n  return (\n    <React.Fragment>\n      <tr\n        className={props.total ? 'state is-total' : 'state'}\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\n        onMouseLeave={() => props.onHighlightState?.()}\n        onTouchStart={() => props.onHighlightState?.(state, props.index)}\n        onClick={!props.total ? handleReveal : null}\n        style={{background: props.index % 2 === 0 ? '#f8f9fa' : ''}}\n      >\n        <td style={{fontWeight: 600}}>\n          <div className=\"table__title-wrapper\">\n            <span\n              className={`dropdown ${\n                props.reveal ? 'rotateRightDown' : 'rotateDownRight'\n              }`}\n              style={{display: !props.total ? '' : 'none'}}\n              onClick={() => {\n                handleReveal();\n              }}\n            >\n              <Icon.ChevronDown />\n            </span>\n            {state.state}\n            {state.state === 'West Bengal' && (\n              <Link to=\"/faq\">\n                <Icon.HelpCircle className=\"height-22\" />\n              </Link>\n            )}\n          </div>\n        </td>\n        <td>\n          <span className=\"deltas\" style={{color: '#ff073a'}}>\n            {state.deltaconfirmed > 0 && <Icon.ArrowUp />}\n            {state.deltaconfirmed > 0 ? `${state.deltaconfirmed}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.confirmed) === 0\n              ? '-'\n              : formatNumber(state.confirmed)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          {/* <span className=\"deltas\" style={{color: '#007bff'}}>\n            {!state.delta.active==0 && <Icon.ArrowUp/>}\n            {state.delta.active>0 ? `${state.delta.active}` : ''}\n          </span>*/}\n          {parseInt(state.active) === 0 ? '-' : formatNumber(state.active)}\n        </td>\n        <td\n          style={{\n            color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit',\n          }}\n        >\n          <span className=\"deltas\" style={{color: '#28a745'}}>\n            {state.deltarecovered > 0 && <Icon.ArrowUp />}\n            {state.deltarecovered > 0 ? `${state.deltarecovered}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.recovered) === 0\n              ? '-'\n              : formatNumber(state.recovered)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          <span className=\"deltas\" style={{color: '#6c757d'}}>\n            {state.deltadeaths > 0 && <Icon.ArrowUp />}\n            {state.deltadeaths > 0 ? `${state.deltadeaths}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.deaths) === 0 ? '-' : formatNumber(state.deaths)}\n          </span>\n        </td>\n      </tr>\n\n      <tr\n        className={'state-last-update'}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td colSpan={2}>\n          <div className=\"last-update\">\n            <h6>Last Updated&nbsp;</h6>\n            <h6\n              title={\n                isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(props.state.lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                ? ''\n                : `${formatDistance(\n                    new Date(formatDate(props.state.lastupdatedtime)),\n                    new Date()\n                  )} Ago`}\n            </h6>\n          </div>\n        </td>\n      </tr>\n\n      <tr\n        className={`district-heading`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td onClick={(e) => handleSort('district')}>\n          <div className=\"heading-content\">\n            <abbr title=\"District\">District</abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'district' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n        <td onClick={(e) => handleSort('confirmed')}>\n          <div className=\"heading-content\">\n            <abbr\n              className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n              title=\"Confirmed\"\n            >\n              {window.innerWidth <= 769\n                ? window.innerWidth <= 375\n                  ? 'C'\n                  : 'Cnfmd'\n                : 'Confirmed'}\n            </abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n      </tr>\n\n      {sortedDistricts &&\n        Object.keys(sortedDistricts)\n          .filter((district) => district.toLowerCase() !== 'unknown')\n          .map((district, index) => {\n            if (district.toLowerCase() !== 'unknown') {\n              return (\n                <tr\n                  key={index}\n                  className={`district`}\n                  style={{\n                    display: props.reveal && !props.total ? '' : 'none',\n                    background: index % 2 === 0 ? '#f8f9fa' : '',\n                  }}\n                  onMouseEnter={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                  onMouseLeave={() => props.onHighlightDistrict?.()}\n                  onTouchStart={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                >\n                  <td style={{fontWeight: 600}}>{district}</td>\n                  <td>\n                    <span className=\"deltas\" style={{color: '#ff073a'}}>\n                      {sortedDistricts[district].delta.confirmed > 0 && (\n                        <Icon.ArrowUp />\n                      )}\n                      {sortedDistricts[district].delta.confirmed > 0\n                        ? `${sortedDistricts[district].delta.confirmed}`\n                        : ''}\n                    </span>\n                    <span className=\"table__count-text\">\n                      {formatNumber(sortedDistricts[district].confirmed)}\n                    </span>\n                  </td>\n                </tr>\n              );\n            }\n            return null;\n          })}\n\n      {sortedDistricts?.Unknown && (\n        <tr\n          className={`district`}\n          style={{display: props.reveal && !props.total ? '' : 'none'}}\n        >\n          <td style={{fontWeight: 600}}>Unknown</td>\n          <td>\n            <span className=\"deltas\" style={{color: '#ff073a'}}>\n              {sortedDistricts['Unknown'].delta.confirmed > 0 && (\n                <Icon.ArrowUp />\n              )}\n              {sortedDistricts['Unknown'].delta.confirmed > 0\n                ? `${sortedDistricts['Unknown'].delta.confirmed}`\n                : ''}\n            </span>\n            <span className=\"table__count-text\">\n              {formatNumber(sortedDistricts['Unknown'].confirmed)}\n            </span>\n          </td>\n        </tr>\n      )}\n\n      <tr\n        className={`spacer`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    </React.Fragment>\n  );\n}\n\nexport default Row;\n","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport Row from './row';\n\nfunction Table(props) {\n  const [states, setStates] = useState(props.states);\n  const [revealedStates, setRevealedStates] = useState({});\n  const [districts, setDistricts] = useState({});\n  const [count, setCount] = useState(0);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('state.sortColumn')\n      ? localStorage.getItem('state.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('state.isAscending')\n      ? localStorage.getItem('state.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    if (props.summary === true) {\n      setStates(props.states.slice(0, 9));\n    } else {\n      setStates(props.states);\n    }\n  }, [props.states, props.summary]);\n\n  useEffect(() => {\n    if (props.states[0]) {\n      setRevealedStates(\n        props.states.reduce((a, state) => {\n          return {...a, [state.state]: false};\n        }, {})\n      );\n    }\n  }, [props.states]);\n\n  useEffect(() => {\n    if (states.length > 0) {\n      // slice to ignore the first item which is the total count\n      setCount(states.slice(1).filter((s) => s && s.confirmed > 0).length);\n    }\n  }, [states]);\n\n  useEffect(() => {\n    setDistricts(props.stateDistrictWiseData);\n  }, [props.stateDistrictWiseData]);\n\n  const doSort = (e, props) => {\n    const totalRow = states.splice(0, 1);\n    states.sort((StateData1, StateData2) => {\n      const sortColumn = sortData.sortColumn;\n      let value1 = StateData1[sortColumn];\n      let value2 = StateData2[sortColumn];\n\n      if (sortColumn !== 'state') {\n        value1 = parseInt(StateData1[sortColumn]);\n        value2 = parseInt(StateData2[sortColumn]);\n      }\n\n      if (sortData.isAscending) {\n        return value1 > value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      } else {\n        return value1 < value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      }\n    });\n    states.unshift(totalRow[0]);\n  };\n\n  const handleSort = (e, props) => {\n    const currentsortColumn = e.currentTarget\n      .querySelector('abbr')\n      .getAttribute('title')\n      .toLowerCase();\n    const isAscending =\n      sortData.sortColumn === currentsortColumn\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'state';\n    setSortData({\n      sortColumn: currentsortColumn,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('state.sortColumn', currentsortColumn);\n    localStorage.setItem('state.isAscending', isAscending);\n  };\n\n  const handleReveal = (state) => {\n    setRevealedStates({\n      ...revealedStates,\n      [state]: !revealedStates[state],\n    });\n  };\n\n  doSort();\n\n  return (\n    <React.Fragment>\n      <h5\n        className=\"table-fineprint fadeInUp\"\n        style={{animationDelay: '1.8s'}}\n        ref={props.forwardRef}\n      >\n        Compiled from State Govt. numbers <Link to=\"/faq\">Know More</Link>\n      </h5>\n      <table className=\"table fadeInUp\" style={{animationDelay: '1.8s'}}>\n        <thead>\n          <tr>\n            <th\n              className=\"sticky state-heading\"\n              onClick={(e) => handleSort(e, props)}\n            >\n              <div className=\"heading-content\">\n                <abbr title=\"State\">State/UT</abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'state' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n                  title=\"Confirmed\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'C'\n                      : 'Cnfmd'\n                    : 'Confirmed'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-blue' : ''}`}\n                  title=\"Active\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'A'\n                      : 'Actv'\n                    : 'Active'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'active' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-green' : ''}`}\n                  title=\"Recovered\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'R'\n                      : 'Rcvrd'\n                    : 'Recovered'}\n                </abbr>\n                <div\n                  className={\n                    sortData.sortColumn === 'recovered' ? 'sort-black' : ''\n                  }\n                ></div>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'recovered' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\n                  title=\"Deaths\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'D'\n                      : 'Dcsd'\n                    : 'Deceased'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'deaths' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {states.map((state, index) => {\n            if (index !== 0 && state.confirmed > 0) {\n              return (\n                <Row\n                  key={index}\n                  index={index}\n                  state={state}\n                  total={false}\n                  reveal={revealedStates[state.state]}\n                  districts={\n                    state.state in districts\n                      ? districts[state.state].districtData\n                      : []\n                  }\n                  onHighlightState={props.onHighlightState}\n                  onHighlightDistrict={props.onHighlightDistrict}\n                  handleReveal={handleReveal}\n                />\n              );\n            }\n            return null;\n          })}\n        </tbody>\n\n        <tbody>\n          {states.length > 1 && props.summary === false && (\n            <Row\n              key={0}\n              state={states[0]}\n              total={true}\n              onHighlightState={props.onHighlightState}\n            />\n          )}\n        </tbody>\n      </table>\n      <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\n        {count} States/UTS Affected\n      </h5>\n    </React.Fragment>\n  );\n}\n\nexport default Table;\n","import React, {useState, useEffect} from 'react';\nimport {formatNumber} from '../utils/common-functions';\n\nfunction Level(props) {\n  const [data, setData] = useState(props.data);\n  const [confirmed, setConfirmed] = useState(0);\n  const [active, setActive] = useState(0);\n  const [recoveries, setRecoveries] = useState(0);\n  const [deaths, setDeaths] = useState(0);\n  const [deltas, setDeltas] = useState(0);\n\n  useEffect(() => {\n    setData(props.data);\n  }, [props.data]);\n\n  useEffect(() => {\n    const parseData = () => {\n      let confirmed = 0;\n      let active = 0;\n      let recoveries = 0;\n      let deaths = 0;\n      let deltas = {};\n      data.forEach((state, index) => {\n        if (index !== 0) {\n          confirmed += parseInt(state.confirmed);\n          active += parseInt(state.active);\n          recoveries += parseInt(state.recovered);\n          deaths += parseInt(state.deaths);\n        } else {\n          deltas = {\n            confirmed: parseInt(state.deltaconfirmed),\n            deaths: parseInt(state.deltadeaths),\n            recovered: parseInt(state.deltarecovered),\n          };\n        }\n      });\n      setConfirmed(confirmed);\n      setActive(active);\n      setRecoveries(recoveries);\n      setDeaths(deaths);\n      setDeltas(deltas);\n    };\n    parseData();\n  }, [data]);\n\n  return (\n    <div className=\"Level\">\n      <div\n        className=\"level-item is-cherry fadeInUp\"\n        style={{animationDelay: '1s'}}\n      >\n        <h5>Confirmed</h5>\n        <h4>\n          [\n          {deltas\n            ? deltas.confirmed > 0\n              ? '+' + formatNumber(deltas.confirmed)\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1>{formatNumber(confirmed)} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-blue fadeInUp\"\n        style={{animationDelay: '1.1s'}}\n      >\n        <h5 className=\"heading\">Active</h5>\n        <h4>&nbsp;</h4>\n        {/* <h4>[{props.deltas ? props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta) >=0 ? '+'+(props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta)).toString() : '+0' : ''}]</h4>*/}\n        <h1 className=\"title has-text-info\">{formatNumber(active)}</h1>\n      </div>\n\n      <div\n        className=\"level-item is-green fadeInUp\"\n        style={{animationDelay: '1.2s'}}\n      >\n        <h5 className=\"heading\">Recovered</h5>\n        <h4>\n          [\n          {deltas\n            ? deltas.recovered > 0\n              ? '+' + formatNumber(deltas.recovered)\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">{formatNumber(recoveries)} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-gray fadeInUp\"\n        style={{animationDelay: '1.3s'}}\n      >\n        <h5 className=\"heading\">Deceased</h5>\n        <h4>\n          [\n          {deltas\n            ? deltas.deaths > 0\n              ? '+' + formatNumber(deltas.deaths)\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1 className=\"title has-text-grey\">{formatNumber(deaths)}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Level;\n","export const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n};\n\nexport const MAPS_DIR = '/maps';\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport {legendColor} from 'd3-svg-legend';\nimport * as topojson from 'topojson';\nimport {MAP_TYPES} from '../constants';\n\nconst propertyFieldMap = {\n  country: 'st_nm',\n  state: 'district',\n};\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  setHoveredRegion,\n  mapMeta,\n  changeMap,\n  selectedRegion,\n  setSelectedRegion,\n}) {\n  const choroplethMap = useRef(null);\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\n\n  const ready = useCallback(\n    (geoData) => {\n      d3.selectAll('svg#chart > *').remove();\n      const propertyField = propertyFieldMap[mapMeta.mapType];\n      const maxInterpolation = 0.8;\n      const svg = d3.select(choroplethMap.current);\n      const width = +svg.attr('width');\n      const height = +svg.attr('height');\n\n      const handleMouseover = (name) => {\n        try {\n          setHoveredRegion(name, mapMeta);\n          setSelectedRegion(name);\n        } catch (err) {\n          console.log('err', err);\n        }\n      };\n\n      const topology = topojson.feature(\n        geoData,\n        geoData.objects[mapMeta.graphObjectName]\n      );\n\n      const projection = d3.geoMercator();\n\n      if (mapMeta.mapType === MAP_TYPES.COUNTRY)\n        projection.fitSize([width, height], topology);\n      else\n        projection.fitExtent(\n          [\n            [90, 20],\n            [width, height],\n          ],\n          topology\n        );\n\n      const path = d3.geoPath(projection);\n\n      let onceTouchedRegion = null;\n\n      svg\n        .append('g')\n        .attr('class', 'states')\n        .selectAll('path')\n        .data(topology.features)\n        .enter()\n        .append('path')\n        .attr('class', 'path-region')\n        .attr('fill', function (d) {\n          const n = parseInt(mapData[d.properties[propertyField]]) || 0;\n          const color =\n            n === 0\n              ? '#ffffff'\n              : d3.interpolateReds(\n                  (maxInterpolation * n) / (statistic.maxConfirmed || 0.001)\n                );\n          return color;\n        })\n        .attr('d', path)\n        .attr('pointer-events', 'all')\n        .on('mouseover', (d) => {\n          handleMouseover(d.properties[propertyField]);\n        })\n        .on('mouseleave', (d) => {\n          setSelectedRegion(null);\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on('touchstart', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on('click', (d) => {\n          if (onceTouchedRegion) {\n            return;\n          }\n          if (mapMeta.mapType === MAP_TYPES.STATE) {\n            return;\n          }\n          changeMap(d.properties[propertyField], mapMeta.mapType);\n        })\n        .style('cursor', 'pointer')\n        .append('title')\n        .text(function (d) {\n          const value = mapData[d.properties[propertyField]] || 0;\n          return (\n            Number(\n              parseFloat(100 * (value / (statistic.total || 0.001))).toFixed(2)\n            ).toString() +\n            '% from ' +\n            toTitleCase(d.properties[propertyField])\n          );\n        });\n\n      svg\n        .append('path')\n        .attr('stroke', '#ff073a20')\n        .attr('fill', 'none')\n        .attr('stroke-width', 2)\n        .attr(\n          'd',\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\n        );\n    },\n    [\n      mapData,\n      mapMeta,\n      statistic.total,\n      statistic.maxConfirmed,\n      changeMap,\n      setHoveredRegion,\n      setSelectedRegion,\n    ]\n  );\n\n  const toTitleCase = (str) => {\n    str = str.toLowerCase().split(' ');\n    for (let i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ');\n  };\n\n  const renderData = useCallback(() => {\n    const svg = d3.select(choroplethMap.current);\n\n    // Colorbar\n    const maxInterpolation = 0.8;\n    const color = d3\n      .scaleSequential(d3.interpolateReds)\n      .domain([0, statistic.maxConfirmed / maxInterpolation || 10]);\n\n    let cells = null;\n    let label = null;\n\n    label = ({i, genLength, generatedLabels, labelDelimiter}) => {\n      if (i === genLength - 1) {\n        const n = Math.floor(generatedLabels[i]);\n        return `${n}+`;\n      } else {\n        const n1 = 1 + Math.floor(generatedLabels[i]);\n        const n2 = Math.floor(generatedLabels[i + 1]);\n        return `${n1} - ${n2}`;\n      }\n    };\n\n    const numCells = 6;\n    const delta = Math.floor(\n      (statistic.maxConfirmed < numCells ? numCells : statistic.maxConfirmed) /\n        (numCells - 1)\n    );\n\n    cells = Array.from(Array(numCells).keys()).map((i) => i * delta);\n\n    svg\n      .append('g')\n      .attr('class', 'legendLinear')\n      .attr('transform', 'translate(1, 335)');\n\n    const legendLinear = legendColor()\n      .shapeWidth(36)\n      .shapeHeight(10)\n      .cells(cells)\n      .titleWidth(3)\n      .labels(label)\n      .title('Confirmed Cases')\n      .orient('vertical')\n      .scale(color);\n\n    svg\n      .select('.legendLinear')\n      .call(legendLinear)\n      .selectAll('text')\n      .style('font-size', '10px');\n  }, [statistic.maxConfirmed]);\n\n  useEffect(() => {\n    (async () => {\n      const data = await d3.json(mapMeta.geoDataFile);\n      if (statistic && choroplethMap.current) {\n        ready(data);\n        renderData();\n        setSvgRenderCount((prevCount) => prevCount + 1);\n      }\n    })();\n  }, [mapMeta.geoDataFile, statistic, renderData, ready]);\n\n  const highlightRegionInMap = (name) => {\n    const paths = d3.selectAll('.path-region');\n    paths.classed('map-hover', (d, i, nodes) => {\n      const propertyField =\n        'district' in d.properties\n          ? propertyFieldMap['state']\n          : propertyFieldMap['country'];\n      if (name === d.properties[propertyField]) {\n        nodes[i].parentNode.appendChild(nodes[i]);\n        return true;\n      }\n      return false;\n    });\n  };\n\n  useEffect(() => {\n    highlightRegionInMap(selectedRegion);\n  }, [svgRenderCount, selectedRegion]);\n\n  return (\n    <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\n      <svg\n        id=\"chart\"\n        width=\"480\"\n        height=\"450\"\n        viewBox=\"0 0 480 450\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        ref={choroplethMap}\n      ></svg>\n    </div>\n  );\n}\n\nexport default ChoroplethMap;\n","import React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport ChoroplethMap from './choropleth';\nimport {MAP_TYPES, MAPS_DIR} from '../constants';\nimport {formatDate, formatDateAbsolute} from '../utils/common-functions';\nimport {formatDistance, format, parse} from 'date-fns';\nimport {formatNumber} from '../utils/common-functions';\nimport * as Icon from 'react-feather';\n\nconst mapMeta = {\n  India: {\n    name: 'India',\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectName: 'india',\n  },\n  'Andaman and Nicobar Islands': {\n    name: 'Andaman and Nicobar Islands',\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andamannicobarislands_district',\n  },\n  'Arunachal Pradesh': {\n    name: 'Arunachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'arunachalpradesh_district',\n  },\n  'Andhra Pradesh': {\n    name: 'Andhra Pradesh',\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andhrapradesh_district',\n  },\n\n  Assam: {\n    name: 'Assam',\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'assam_district',\n  },\n  Bihar: {\n    name: 'Bihar',\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'bihar_district',\n  },\n  Chandigarh: {\n    name: 'Chandigarh',\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chandigarh_district',\n  },\n  Chhattisgarh: {\n    name: 'Chhattisgarh',\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chhattisgarh_district',\n  },\n  'Dadra and Nagar Haveli': {\n    name: 'Dadra and Nagar Haveli',\n    geoDataFile: `${MAPS_DIR}/dadranagarhaveli.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'dadranagarhaveli_district',\n  },\n  Delhi: {\n    name: 'Delhi',\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'delhi_district',\n  },\n  Karnataka: {\n    name: 'Karnataka',\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'karnataka_district',\n  },\n  Kerala: {\n    name: 'Kerala',\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kerala_district',\n  },\n  Goa: {\n    name: 'Goa',\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'goa_district',\n  },\n  Gujarat: {\n    name: 'Gujarat',\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'gujarat_district',\n  },\n  Haryana: {\n    name: 'Haryana',\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'haryana_district',\n  },\n  'Himachal Pradesh': {\n    name: 'Himachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'himachalpradesh_district',\n  },\n  'Jammu and Kashmir': {\n    name: 'Jammu and Kashmir',\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jammukashmir_district',\n  },\n  Jharkhand: {\n    name: 'Jharkhand',\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jharkhand_district',\n  },\n  Ladakh: {\n    name: 'Ladakh',\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'ladakh_district',\n  },\n  Lakshadweep: {\n    name: 'Lakshadweep',\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'lakshadweep_district',\n  },\n  'Madhya Pradesh': {\n    name: 'Madhya Pradesh',\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'madhyapradesh_district',\n  },\n  Maharashtra: {\n    name: 'Maharashtra',\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'maharashtra_district',\n  },\n  Manipur: {\n    name: 'Manipur',\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'manipur_district',\n  },\n  Meghalaya: {\n    name: 'Meghalaya',\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'meghalaya_district',\n  },\n  Mizoram: {\n    name: 'Mizoram',\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mizoram_district',\n  },\n  Nagaland: {\n    name: 'Nagaland',\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'nagaland_district',\n  },\n  Odisha: {\n    name: 'Odisha',\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'odisha_district',\n  },\n  Puducherry: {\n    name: 'Puducherry',\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'puducherry_district',\n  },\n  Punjab: {\n    name: 'Punjab',\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'punjab_district',\n  },\n  Rajasthan: {\n    name: 'Rajasthan',\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'rajasthan_district',\n  },\n  Sikkim: {\n    name: 'Sikkim',\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'sikkim_district',\n  },\n  'Tamil Nadu': {\n    name: 'Tamil Nadu',\n    geoDataFile: `${MAPS_DIR}/tamil-nadu.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tamilnadu_district',\n  },\n  Telangana: {\n    name: 'Telangana',\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'telangana_district',\n  },\n  Tripura: {\n    name: 'Tripura',\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tripura_district',\n  },\n  Uttarakhand: {\n    name: 'Uttarakhand',\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarakhand_district',\n  },\n  'Uttar Pradesh': {\n    name: 'Uttar Pradesh',\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarpradesh_district',\n  },\n\n  'West Bengal': {\n    name: 'West Bengal',\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'westbengal_district',\n  },\n};\n\nconst getRegionFromState = (state) => {\n  if (!state) return;\n  const region = {...state};\n  if (!region.name) region.name = region.state;\n  return region;\n};\n\nconst getRegionFromDistrict = (districtData, name) => {\n  if (!districtData) return;\n  const region = {...districtData};\n  if (!region.name) region.name = name;\n  return region;\n};\n\nfunction MapExplorer({\n  forwardRef,\n  states,\n  stateDistrictWiseData,\n  stateTestData,\n  regionHighlighted,\n  onMapHighlightChange,\n}) {\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [panelRegion, setPanelRegion] = useState(getRegionFromState(states[0]));\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState(\n    getRegionFromState(states[0])\n  );\n  const [testObj, setTestObj] = useState({});\n  const [currentMap, setCurrentMap] = useState(mapMeta.India);\n\n  const [statistic, currentMapData] = useMemo(() => {\n    const statistic = {total: 0, maxConfirmed: 0};\n    let currentMapData = {};\n\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      currentMapData = states.reduce((acc, state) => {\n        if (state.state === 'Total') {\n          return acc;\n        }\n        const confirmed = parseInt(state.confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n\n        acc[state.state] = state.confirmed;\n        return acc;\n      }, {});\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const districtWiseData = (\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\n      ).districtData;\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\n        const confirmed = parseInt(districtWiseData[district].confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n        acc[district] = districtWiseData[district].confirmed;\n        return acc;\n      }, {});\n    }\n    return [statistic, currentMapData];\n  }, [currentMap, states, stateDistrictWiseData]);\n\n  const setHoveredRegion = useCallback(\n    (name, currentMap) => {\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n        const region = getRegionFromState(\n          states.find((state) => name === state.state)\n        );\n        setCurrentHoveredRegion(region);\n        setPanelRegion(region);\n        onMapHighlightChange(region);\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\n        const state = stateDistrictWiseData[currentMap.name] || {\n          districtData: {},\n        };\n        let districtData = state.districtData[name];\n        if (!districtData) {\n          districtData = {\n            confirmed: 0,\n            active: 0,\n            deaths: 0,\n            recovered: 0,\n          };\n        }\n        setCurrentHoveredRegion(getRegionFromDistrict(districtData, name));\n        const panelRegion = getRegionFromState(\n          states.find((state) => currentMap.name === state.state)\n        );\n        setPanelRegion(panelRegion);\n      }\n    },\n    [states, stateDistrictWiseData, onMapHighlightChange]\n  );\n\n  useEffect(() => {\n    if (regionHighlighted === undefined) {\n      return;\n    } else if (regionHighlighted === null) {\n      setSelectedRegion(null);\n      return;\n    }\n    const isState = !('district' in regionHighlighted);\n    if (isState) {\n      const newMap = mapMeta['India'];\n      setCurrentMap(newMap);\n      const region = getRegionFromState(regionHighlighted.state);\n      setHoveredRegion(region.name, newMap);\n      setSelectedRegion(region.name);\n    } else {\n      const newMap = mapMeta[regionHighlighted.state.state];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setHoveredRegion(regionHighlighted.district, newMap);\n      setSelectedRegion(regionHighlighted.district);\n    }\n  }, [regionHighlighted, currentMap.mapType, setHoveredRegion]);\n\n  const switchMapToState = useCallback(\n    (name) => {\n      const newMap = mapMeta[name];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setSelectedRegion(null);\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\n        setHoveredRegion(states[0].state, newMap);\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\n        const {districtData} = stateDistrictWiseData[name] || {};\n        const topDistrict = Object.keys(districtData)\n          .filter((name) => name !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        setHoveredRegion(topDistrict, newMap);\n      }\n    },\n    [setHoveredRegion, stateDistrictWiseData, states]\n  );\n\n  const {name, lastupdatedtime} = currentHoveredRegion;\n\n  useEffect(() => {\n    setTestObj(\n      stateTestData.find(\n        (obj) => obj.state === panelRegion.name && obj.totaltested !== ''\n      )\n    );\n  }, [panelRegion, stateTestData, testObj]);\n\n  return (\n    <div\n      className=\"MapExplorer fadeInUp\"\n      style={{animationDelay: '1.5s'}}\n      ref={forwardRef}\n    >\n      <div className=\"header\">\n        <h1>{currentMap.name}</h1>\n        <h6>\n          {window.innerWidth <= 769 ? 'Tap' : 'Hover'} over a{' '}\n          {currentMap.mapType === MAP_TYPES.COUNTRY ? 'state/ut' : 'district'}{' '}\n          for more details\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div className=\"stats fadeInUp\" style={{animationDelay: '2s'}}>\n          <h5>{window.innerWidth <= 769 ? 'Cnfmd' : 'Confirmed'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.confirmed)}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-blue fadeInUp\"\n          style={{animationDelay: '2.1s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? 'Actv' : 'Active'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.active)}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-green fadeInUp\"\n          style={{animationDelay: '2.2s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? 'Rcvrd' : 'Recovered'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.recovered)}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-gray fadeInUp\"\n          style={{animationDelay: '2.3s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? 'Dcsd' : 'Deceased'}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.deaths)}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        {\n          <div\n            className=\"stats is-purple tested fadeInUp\"\n            style={{animationDelay: '2.4s'}}\n          >\n            <h5>{window.innerWidth <= 769 ? 'Tested' : 'Tested'}</h5>\n            <div className=\"stats-bottom\">\n              <h1>\n                {formatNumber(testObj?.totaltested, window.innerWidth <= 769)}\n              </h1>\n            </div>\n            <h6 className=\"timestamp\">\n              {!isNaN(new Date(testObj?.updatedon))\n                ? `As of ${format(\n                    parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()),\n                    'dd MMM'\n                  )}`\n                : ''}\n            </h6>\n            {testObj?.totaltested?.length > 1 && (\n              <a href={testObj.source} target=\"_noblank\">\n                <Icon.Link />\n              </a>\n            )}\n          </div>\n        }\n      </div>\n\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\n        <h2>{name}</h2>\n        {lastupdatedtime && (\n          <div\n            className={`last-update ${\n              currentMap.mapType === MAP_TYPES.STATE\n                ? 'district-last-update'\n                : 'state-last-update'\n            }`}\n          >\n            <h6>Last Updated</h6>\n            <h3\n              title={\n                isNaN(Date.parse(formatDate(lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDate(lastupdatedtime)))\n                ? ''\n                : formatDistance(\n                    new Date(formatDate(lastupdatedtime)),\n                    new Date()\n                  ) + ' Ago'}\n            </h3>\n          </div>\n        )}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <h4 className=\"district-confirmed\">\n            Confirmed cases:{' '}\n            {currentMapData[currentHoveredRegion.name]\n              ? currentMapData[currentHoveredRegion.name]\n              : 0}\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown > 0 ? (\n          <h4 className=\"unknown\">\n            Districts unknown for {currentMapData.Unknown} people\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('India')}\n          >\n            Back\n          </div>\n        ) : null}\n      </div>\n\n      <ChoroplethMap\n        statistic={statistic}\n        mapMeta={currentMap}\n        mapData={currentMapData}\n        setHoveredRegion={setHoveredRegion}\n        changeMap={switchMapToState}\n        selectedRegion={selectedRegion}\n        setSelectedRegion={setSelectedRegion}\n      />\n    </div>\n  );\n}\n\nexport default MapExplorer;\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport {sliceTimeseriesFromEnd} from '../utils/common-functions';\nimport {useResizeObserver} from '../utils/hooks';\nimport {formatNumber} from '../utils/common-functions';\n\nfunction TimeSeries(props) {\n  const [lastDaysCount, setLastDaysCount] = useState(\n    window.innerWidth > 512 ? Infinity : 30\n  );\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(10);\n  const [mode, setMode] = useState(props.mode);\n  const [logMode, setLogMode] = useState(props.logMode);\n  const [chartType, setChartType] = useState(props.type);\n  const [moving, setMoving] = useState(false);\n\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  useEffect(() => {\n    if (props.timeseries.length > 1) {\n      const slicedTimeseries = sliceTimeseriesFromEnd(\n        props.timeseries,\n        lastDaysCount\n      );\n      setIndex(slicedTimeseries.length - 1);\n      setTimeseries(slicedTimeseries);\n    }\n  }, [props.timeseries, lastDaysCount]);\n\n  useEffect(() => {\n    setMode(props.mode);\n  }, [props.mode]);\n\n  useEffect(() => {\n    setLogMode(props.logMode);\n  }, [props.logMode]);\n\n  useEffect(() => {\n    setChartType(props.type);\n  }, [props.type]);\n\n  const graphData = useCallback(\n    (ts) => {\n      if (!dimensions) return;\n      const width = dimensions.width;\n      const height = dimensions.height;\n\n      // Margins\n      const margin = {top: 15, right: 35, bottom: 25, left: 25};\n      const chartRight = width - margin.right;\n      const chartBottom = height - margin.bottom;\n\n      const T = ts.length;\n      const yBuffer = 1.1;\n\n      setDatapoint(ts[T - 1]);\n      setIndex(T - 1);\n\n      const svg1 = d3.select(svgRef1.current);\n      const svg2 = d3.select(svgRef2.current);\n      const svg3 = d3.select(svgRef3.current);\n\n      const dateMin = new Date(ts[0]['date']);\n      dateMin.setDate(dateMin.getDate() - 1);\n      const dateMax = new Date(ts[T - 1]['date']);\n      dateMax.setDate(dateMax.getDate() + 1);\n\n      const xScale = d3\n        .scaleTime()\n        .clamp(true)\n        .domain([dateMin, dateMax])\n        .range([margin.left, chartRight]);\n\n      // Number of x-axis ticks\n      const numTicksX = width < 480 ? 4 : 7;\n\n      const xAxis = (g) =>\n        g\n          .attr('class', 'x-axis')\n          .call(d3.axisBottom(xScale).ticks(numTicksX))\n          .style('transform', `translateY(${chartBottom}px)`);\n\n      const yAxis = (g, yScale) =>\n        g\n          .attr('class', 'y-axis')\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5))\n          .style('transform', `translateX(${chartRight}px)`);\n\n      // Arrays of objects\n      const svgArray = [svg1, svg2, svg3];\n      const plotTotal = chartType === 1;\n      const dataTypesTotal = [\n        'totalconfirmed',\n        'totalrecovered',\n        'totaldeceased',\n      ];\n      const dataTypesDaily = [\n        'dailyconfirmed',\n        'dailyrecovered',\n        'dailydeceased',\n      ];\n\n      const colors = ['#ff073a', '#28a745', '#6c757d'];\n\n      let yScales;\n      if (plotTotal) {\n        let uniformScaleMin = Infinity;\n        dataTypesTotal.forEach((type) => {\n          uniformScaleMin = Math.min(\n            uniformScaleMin,\n            d3.min(ts, (d) => d[type])\n          );\n        });\n        const yScaleUniformLinear = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            uniformScaleMin,\n            Math.max(1, yBuffer * d3.max(ts, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        const yScaleUniformLog = d3\n          .scaleLog()\n          .clamp(true)\n          .domain([\n            Math.max(1, uniformScaleMin),\n            Math.max(1, yBuffer * d3.max(ts, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesTotal.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              d3.min(ts, (d) => d[type]),\n              Math.max(1, yBuffer * d3.max(ts, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          const yScaleLog = d3\n            .scaleLog()\n            .clamp(true)\n            .domain([\n              Math.max(\n                1,\n                d3.min(ts, (d) => d[type])\n              ),\n              Math.max(1, yBuffer * d3.max(ts, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          if (logMode) return mode ? yScaleUniformLog : yScaleLog;\n          else return mode ? yScaleUniformLinear : yScaleLinear;\n        });\n      } else {\n        const yScaleDailyUniform = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            0,\n            Math.max(1, yBuffer * d3.max(ts, (d) => d.dailyconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesDaily.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([0, Math.max(1, yBuffer * d3.max(ts, (d) => d[type]))])\n            .nice()\n            .range([chartBottom, margin.top]);\n          return mode ? yScaleDailyUniform : yScaleLinear;\n        });\n      }\n\n      /* Focus dots */\n      const focus = svgArray.map((svg, i) => {\n        return svg\n          .selectAll('.focus')\n          .data([ts[T - 1]], (d) => d.date)\n          .join('circle')\n          .attr('class', 'focus')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('r', 4);\n      });\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const date = xScale.invert(xm);\n        const bisectDate = d3.bisector((d) => d.date).left;\n        let i = bisectDate(ts, date, 1);\n        if (0 <= i && i < T) {\n          if (date - ts[i - 1].date < ts[i].date - date) --i;\n          setDatapoint(ts[i]);\n          setIndex(i);\n          setMoving(true);\n          const d = ts[i];\n          focus.forEach((f, j) => {\n            const yScale = yScales[j];\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n            f.attr('cx', xScale(d.date)).attr('cy', yScale(d[type]));\n          });\n        }\n      }\n\n      function mouseout() {\n        setDatapoint(ts[T - 1]);\n        setIndex(T - 1);\n        setMoving(false);\n        focus.forEach((f, j) => {\n          const yScale = yScales[j];\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n          f.attr('cx', xScale(ts[T - 1].date)).attr(\n            'cy',\n            yScale(ts[T - 1][type])\n          );\n        });\n      }\n\n      /* Begin drawing charts */\n      svgArray.forEach((svg, i) => {\n        // Transition interval\n        const t = svg.transition().duration(500);\n        const typeTotal = dataTypesTotal[i];\n        const typeDaily = dataTypesDaily[i];\n        const type = plotTotal ? typeTotal : typeDaily;\n\n        const color = colors[i];\n        const yScale = yScales[i];\n        // WARNING: Bad code ahead.\n        /* X axis */\n        if (svg.select('.x-axis').empty()) {\n          svg.append('g').attr('class', 'x-axis').call(xAxis);\n        } else {\n          svg.select('.x-axis').transition(t).call(xAxis);\n        }\n        /* Y axis */\n        if (svg.select('.y-axis').empty()) {\n          svg.append('g').call(yAxis, yScale);\n        } else {\n          svg.select('.y-axis').transition(t).call(yAxis, yScale);\n        }\n        // ^This block of code should be written in a more d3 way following the\n        //  General Update Pattern. Can't find of a way to do that within React.\n\n        /* Path dots */\n        svg\n          .selectAll('.dot')\n          .data(ts, (d) => d.date)\n          .join((enter) => enter.append('circle').attr('cy', chartBottom))\n          .attr('class', 'dot')\n          .attr('fill', color)\n          .attr('stroke', color)\n          .attr('r', 2)\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        focus[i]\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        if (plotTotal) {\n          /* TOTAL TRENDS */\n          svg.selectAll('.stem').remove();\n          const path = svg\n            .selectAll('.trend')\n            .data([[...ts].reverse()])\n            .join('path')\n            .attr('class', 'trend')\n            .attr('fill', 'none')\n            .attr('stroke', color + '99')\n            .attr('stroke-width', 4);\n          // HACK\n          // Path interpolation is non-trivial. Ideally, a custom path tween\n          // function should be defined which takes care that old path dots\n          // transition synchronously along with the path transition. This hack\n          // simulates that behaviour.\n          if (path.attr('d')) {\n            const n = path.node().getTotalLength();\n            const p = path.node().getPointAtLength(n);\n            // Append points at end of path for better interpolation\n            path.attr(\n              'd',\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\n            );\n          }\n          path\n            .transition(t)\n            .attr('opacity', plotTotal ? 1 : 0)\n            .attr(\n              'd',\n              d3\n                .line()\n                .x((d) => xScale(d.date))\n                .y((d) => yScale(d[typeTotal]))\n                .curve(d3.curveMonotoneX)\n            );\n          // Using d3-interpolate-path\n          // .attrTween('d', function (d) {\n          //   var previous = path.attr('d');\n          //   var current = line(d);\n          //   return interpolatePath(previous, current);\n          // });\n        } else {\n          /* DAILY TRENDS */\n          svg.selectAll('.trend').remove();\n          svg\n            .selectAll('.stem')\n            .data(ts, (d) => d.date)\n            .join((enter) =>\n              enter\n                .append('line')\n                .attr('x1', (d) => xScale(d.date))\n                .attr('x2', (d) => xScale(d.date))\n                .attr('y2', chartBottom)\n            )\n            .attr('class', 'stem')\n            .style('stroke', color + '99')\n            .style('stroke-width', 4)\n            .attr('y1', chartBottom)\n            .transition(t)\n            .attr('x1', (d) => xScale(d.date))\n            .attr('x2', (d) => xScale(d.date))\n            .attr('y2', (d) => yScale(d[typeDaily]));\n        }\n\n        svg\n          .on('mousemove', mousemove)\n          .on('touchmove', mousemove)\n          .on('mouseout', mouseout)\n          .on('touchend', mouseout);\n      });\n    },\n    [dimensions, chartType, logMode, mode]\n  );\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  const focusDate = moment(datapoint.date);\n  let dateStr = focusDate.format('DD MMMM');\n  dateStr += focusDate.isSame(moment().subtract(1, 'days'), 'day')\n    ? ' Yesterday'\n    : '';\n\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\n  const chartKey2 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\n  const chartKey3 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\n\n  // Function for calculate increased/decreased count for each type of data\n  const currentStatusCount = (chartType) => {\n    if (timeseries.length <= 0 || index === 0) return '';\n    const currentDiff =\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\n    const formatedDiff = formatNumber(currentDiff);\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\n  };\n\n  return (\n    <div\n      className=\"TimeSeries-Parent fadeInUp\"\n      style={{animationDelay: '2.7s'}}\n    >\n      <div className=\"timeseries\">\n        <div className=\"svg-parent\" ref={wrapperRef}>\n          <div className=\"stats\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Confirmed</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey1])}</h2>\n              <h6>{currentStatusCount(chartKey1)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\" />\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Recovered</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey2])}</h2>\n              <h6>{currentStatusCount(chartKey2)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\" />\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Deceased</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey3])}</h2>\n              <h6>{currentStatusCount(chartKey3)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\" />\n        </div>\n      </div>\n\n      <div className=\"pills\">\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(Infinity)}\n          className={lastDaysCount === Infinity ? 'selected' : ''}\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(30)}\n          className={lastDaysCount === 30 ? 'selected' : ''}\n          aria-label=\"1 month\"\n        >\n          1M\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(14)}\n          className={lastDaysCount === 14 ? 'selected' : ''}\n          aria-label=\"14 days\"\n        >\n          14D\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeSeries;\n","import {useState, useEffect} from 'react';\nimport {ResizeObserver} from '@juggle/resize-observer';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\n\nfunction Minigraph({timeseries}) {\n  const [timeSeriesData, setTimeSeriesData] = useState([]);\n  const graphElement1 = useRef(null);\n  const graphElement2 = useRef(null);\n  const graphElement3 = useRef(null);\n  const graphElement4 = useRef(null);\n\n  useEffect(() => {\n    setTimeSeriesData(timeseries.slice(timeseries.length - 20));\n  }, [timeseries]);\n\n  const graphData = useCallback(\n    (data) => {\n      if (data.length <= 1) return 0;\n\n      const margin = {top: 30, right: 10, bottom: 30, left: 0};\n      const width = 100 - margin.left - margin.right;\n      const height = 100 - margin.top - margin.bottom;\n\n      const svg1 = d3.select(graphElement1.current);\n      const svg2 = d3.select(graphElement2.current);\n      const svg3 = d3.select(graphElement3.current);\n      const svg4 = d3.select(graphElement4.current);\n\n      const x = d3\n        .scaleTime()\n        .domain(d3.extent(data, (d) => d.date))\n        .range([0, width]);\n\n      const y1 = d3\n        .scaleLinear()\n        .domain([0, d3.max(data, (d) => d.dailyconfirmed)])\n        .range([height, 0]);\n\n      const path1 = svg1\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', '#ff073a99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => x(d.date))\n            .y((d) => y1(d.dailyconfirmed))\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength1 = path1.node().getTotalLength();\n      path1\n        .attr('stroke-dasharray', totalLength1 + ' ' + totalLength1)\n        .attr('stroke-dashoffset', totalLength1)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .attr('stroke-dashoffset', 0);\n\n      svg1\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#ff073a')\n        .attr('stroke', '#ff073a')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => x(d.date))\n        .attr('cy', (d) => y1(d.dailyconfirmed))\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .style('opacity', 1);\n\n      const path2 = svg2\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', '#007bff99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => x(d.date))\n            .y((d) => y1(d.dailyconfirmed - d.dailyrecovered - d.dailydeceased))\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength2 = path2.node().getTotalLength();\n      path2\n        .attr('stroke-dasharray', totalLength2 + ' ' + totalLength2)\n        .attr('stroke-dashoffset', totalLength2)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .attr('stroke-dashoffset', 0);\n\n      svg2\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#007bff')\n        .attr('stroke', '#007bff')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => x(d.date))\n        .attr('cy', (d) =>\n          y1(d.dailyconfirmed - d.dailyrecovered - d.dailydeceased)\n        )\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .style('opacity', 1);\n\n      const path3 = svg3\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', '#28a74599')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => x(d.date))\n            .y((d) => y1(d.dailyrecovered))\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength3 = path1.node().getTotalLength();\n      path3\n        .attr('stroke-dasharray', totalLength3 + ' ' + totalLength3)\n        .attr('stroke-dashoffset', totalLength3)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .attr('stroke-dashoffset', 0);\n\n      svg3\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#28a745')\n        .attr('stroke', '#28a745')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => x(d.date))\n        .attr('cy', (d) => y1(d.dailyrecovered))\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .style('opacity', 1);\n\n      const path4 = svg4\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', '#6c757d99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => x(d.date))\n            .y((d) => y1(d.dailydeceased))\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength4 = path4.node().getTotalLength();\n      path4\n        .attr('stroke-dasharray', totalLength4 + ' ' + totalLength4)\n        .attr('stroke-dashoffset', totalLength4)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .attr('stroke-dashoffset', 0);\n\n      svg4\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#6c757d')\n        .attr('stroke', '#6c757d')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => x(d.date))\n        .attr('cy', (d) => y1(d.dailydeceased))\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .style('opacity', 1);\n    },\n    [\n      /* comment can be removed anytime - just kept for reducing the diff */\n    ]\n  );\n\n  useEffect(() => {\n    graphData(timeSeriesData);\n  }, [timeSeriesData, graphData]);\n\n  return (\n    <div className=\"Minigraph\">\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '1.4s'}}>\n        <svg\n          ref={graphElement1}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-blue fadeInUp\"\n        style={{animationDelay: '1.5s'}}\n      >\n        <svg\n          ref={graphElement2}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-green fadeInUp\"\n        style={{animationDelay: '1.6s'}}\n      >\n        <svg\n          ref={graphElement3}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-gray fadeInUp\"\n        style={{animationDelay: '1.7s'}}\n      >\n        <svg\n          ref={graphElement4}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Minigraph;\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport axios from 'axios';\nimport {formatDistance, format} from 'date-fns';\nimport * as Icon from 'react-feather';\n\nimport {\n  formatDate,\n  formatDateAbsolute,\n  preprocessTimeseries,\n  parseStateTimeseries,\n} from '../utils/common-functions';\nimport {Link} from 'react-router-dom';\n\nimport Table from './table';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport TimeSeries from './timeseries';\nimport Minigraph from './minigraph';\n\nfunction Home(props) {\n  const [states, setStates] = useState([]);\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\n  const [stateTestData, setStateTestData] = useState({});\n  const [fetched, setFetched] = useState(false);\n  const [graphOption, setGraphOption] = useState(1);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState({});\n  const [activeStateCode, setActiveStateCode] = useState('TT'); // TT -> India\n  const [activityLog, setActivityLog] = useState([]);\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        {data},\n        stateDistrictWiseResponse,\n        {data: statesDailyResponse},\n        updateLogResponse,\n        {data: stateTestData},\n      ] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\n        axios.get('https://api.covid19india.org/states_daily.json'),\n        axios.get('https://api.covid19india.org/updatelog/log.json'),\n        axios.get('https://api.covid19india.org/state_test_data.json'),\n      ]);\n      setStates(data.statewise);\n      const ts = parseStateTimeseries(statesDailyResponse);\n      ts['TT'] = preprocessTimeseries(data.cases_time_series); // TT -> India\n      setTimeseries(ts);\n      setLastUpdated(data.statewise[0].lastupdatedtime);\n      const testData = stateTestData.states_tested_data.reverse();\n      const totalTest = data.tested[data.tested.length - 1];\n      testData.push({\n        updatedon: totalTest.updatetimestamp.split(' ')[0],\n        totaltested: totalTest.totalindividualstested,\n        source: totalTest.source,\n        state: 'Total', // India\n      });\n      setStateTestData(testData);\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\n      setActivityLog(updateLogResponse.data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onHighlightState = (state, index) => {\n    if (!state && !index) return setRegionHighlighted(null);\n    setRegionHighlighted({state, index});\n  };\n  const onHighlightDistrict = (district, state, index) => {\n    if (!state && !index && !district) return setRegionHighlighted(null);\n    setRegionHighlighted({district, state, index});\n  };\n\n  const onMapHighlightChange = useCallback(({statecode}) => {\n    setActiveStateCode(statecode);\n  }, []);\n\n  const refs = [useRef(), useRef(), useRef()];\n  // const scrollHandlers = refs.map((ref) => () =>\n  //   window.scrollTo({\n  //     top: ref.current.offsetTop,\n  //     behavior: 'smooth',\n  //   })\n  // );\n\n  return (\n    <React.Fragment>\n      <div className=\"Home\">\n        <div className=\"home-left\">\n          <div className=\"header fadeInUp\" style={{animationDelay: '1s'}}>\n            <div className=\"header-mid\">\n              <div className=\"titles\">\n                <h1>India COVID-19 Tracker</h1>\n                <h6 style={{fontWeight: 600}}>A Crowdsourced Initiative</h6>\n              </div>\n              <div className=\"last-update\">\n                <h6>Last Updated</h6>\n                <h6 style={{color: '#28a745', fontWeight: 600}}>\n                  {isNaN(Date.parse(formatDate(lastUpdated)))\n                    ? ''\n                    : formatDistance(\n                        new Date(formatDate(lastUpdated)),\n                        new Date()\n                      ) + ' Ago'}\n                </h6>\n                <h6 style={{color: '#28a745', fontWeight: 600}}>\n                  {isNaN(Date.parse(formatDate(lastUpdated)))\n                    ? ''\n                    : formatDateAbsolute(lastUpdated)}\n                </h6>\n              </div>\n            </div>\n          </div>\n\n          {states.length > 1 && <Level data={states} />}\n          {fetched && <Minigraph timeseries={timeseries['TT']} />}\n          {fetched && (\n            <Table\n              forwardRef={refs[0]}\n              states={states}\n              summary={false}\n              stateDistrictWiseData={stateDistrictWiseData}\n              onHighlightState={onHighlightState}\n              onHighlightDistrict={onHighlightDistrict}\n            />\n          )}\n        </div>\n\n        <div className=\"home-right\">\n          {fetched && (\n            <React.Fragment>\n              <MapExplorer\n                forwardRef={refs[1]}\n                states={states}\n                stateDistrictWiseData={stateDistrictWiseData}\n                stateTestData={stateTestData}\n                regionHighlighted={regionHighlighted}\n                onMapHighlightChange={onMapHighlightChange}\n              />\n\n              <div\n                className=\"timeseries-header fadeInUp\"\n                style={{animationDelay: '2.5s'}}\n                ref={refs[2]}\n              >\n                <h1>Spread Trends</h1>\n                <div className=\"tabs\">\n                  <div\n                    className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(1);\n                    }}\n                  >\n                    <h4>Cumulative</h4>\n                  </div>\n                  <div\n                    className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(2);\n                    }}\n                  >\n                    <h4>Daily</h4>\n                  </div>\n                </div>\n\n                <div className=\"scale-modes\">\n                  <label>Scale Modes</label>\n                  <div className=\"timeseries-mode\">\n                    <label htmlFor=\"timeseries-mode\">Uniform</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={timeseriesMode}\n                      className=\"switch\"\n                      aria-label=\"Checked by default to scale uniformly.\"\n                      onChange={(event) => {\n                        setTimeseriesMode(!timeseriesMode);\n                      }}\n                    />\n                  </div>\n                  <div\n                    className={`timeseries-logmode ${\n                      graphOption !== 1 ? 'disabled' : ''\n                    }`}\n                  >\n                    <label htmlFor=\"timeseries-logmode\">Logarithmic</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={graphOption === 1 && timeseriesLogMode}\n                      className=\"switch\"\n                      disabled={graphOption !== 1}\n                      onChange={(event) => {\n                        setTimeseriesLogMode(!timeseriesLogMode);\n                      }}\n                    />\n                  </div>\n                </div>\n\n                {window.innerWidth <= 769 && (\n                  <div className=\"trends-state-name\">\n                    <select\n                      onChange={({target}) => {\n                        onHighlightState(JSON.parse(target.value));\n                      }}\n                    >\n                      {states.map((s) => {\n                        return (\n                          <option\n                            key={s.statecode}\n                            value={JSON.stringify(s)}\n                            selected={s.statecode === activeStateCode}\n                          >\n                            {s.state === 'Total' ? 'All States' : s.state}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </div>\n                )}\n              </div>\n\n              <TimeSeries\n                timeseries={timeseries[activeStateCode]}\n                type={graphOption}\n                mode={timeseriesMode}\n                logMode={timeseriesLogMode}\n              />\n            </React.Fragment>\n          )}\n        </div>\n\n        {/* <div className=\"floating-buttons\">\n          <button\n            className=\"table-nav fadeInUp\"\n            onClick={scrollHandlers[0]}\n            style={{animationDelay: '2.2s'}}\n          >\n            <Icon.Grid />\n          </button>\n          <button\n            className=\"map-nav fadeInUp\"\n            onClick={scrollHandlers[1]}\n            style={{animationDelay: '2.1s'}}\n          >\n            <Icon.MapPin />\n          </button>\n          <button\n            className=\"trends-nav fadeInUp\"\n            onClick={scrollHandlers[2]}\n            style={{animationDelay: '2s'}}\n          >\n            <Icon.TrendingUp />\n          </button>\n        </div> */}\n\n        {/* <div className=\"home-left\">\n        {patients.length > 1 && (\n          <div className=\"patients-summary\">\n            <h1>Recent Cases</h1>\n            <h6>A summary of the latest reported cases</h6>\n            <div className=\"legend\">\n              <div className=\"legend-left\">\n                <div className=\"circle is-female\"></div>\n                <h5 className=\"is-female\">Female</h5>\n                <div className=\"circle is-male\"></div>\n                <h5 className=\"is-male\">Male</h5>\n                <div className=\"circle\"></div>\n                <h5 className=\"\">Unknown</h5>\n              </div>\n            </div>\n            <div className=\"patients-summary-wrapper\">\n              <Patients\n                patients={patients}\n                summary={true}\n                colorMode={'genders'}\n                expand={true}\n              />\n            </div>\n            <button className=\"button\">\n              <Link to=\"/database\">\n                <Icon.Database />\n                <span>View the Patients Database</span>\n              </Link>\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"home-right\"></div>\n    */}\n      </div>\n\n      <div className=\"Home\">\n        <div className=\"home-left\">\n          <div\n            className=\"updates-header fadeInUp\"\n            style={{animationDelay: '1.5s'}}\n          >\n            <h1>Updates</h1>\n            <h2>{format(new Date(), 'd MMM')}</h2>\n          </div>\n\n          <div className=\"updates fadeInUp\" style={{animationDelay: '1.7s'}}>\n            {activityLog\n              .slice(-5)\n              .reverse()\n              .map(function (activity, index) {\n                activity.update = activity.update.replace('\\n', '<br/>');\n                return (\n                  <div key={index} className=\"update\">\n                    <h5>\n                      {formatDistance(\n                        new Date(activity.timestamp * 1000),\n                        new Date()\n                      ) + ' Ago'}\n                    </h5>\n                    <h4\n                      dangerouslySetInnerHTML={{\n                        __html: activity.update,\n                      }}\n                    ></h4>\n                  </div>\n                );\n              })}\n            <button className=\"button\">\n              <Link to=\"/demographics\">\n                <Icon.Database />\n                <span>Demographic Overview</span>\n              </Link>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"home-right\"></div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Navbar(props) {\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  // HTML Properties for each of the links in UI\n  const navLinkProps = (path, animationDelay) => ({\n    className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\n    style: {\n      animationDelay: `${animationDelay}s`,\n    },\n  });\n\n  if (window.location.pathname !== '/summary') {\n    return (\n      <div\n        className=\"Navbar\"\n        style={{\n          animationDelay: '0.5s',\n          transition: 'all 0.3s ease-in-out',\n        }}\n      >\n        <Link to=\"/\">\n          <img\n            className=\"fadeInUp logo\"\n            alt=\"India COVID-19 Tracker\"\n            src=\"/icon.png\"\n            style={{\n              animationDelay: '0.0s',\n              transition: 'all 0.3s ease-in-out',\n            }}\n          />\n        </Link>\n\n        <div className=\"navbar-left\">\n          <div className={`navbar-menu ${!menuVisible ? 'hidden' : ''}`}>\n            {props.pages.map((page, i) => {\n              return (\n                <Link\n                  onClick={() => setMenuVisible(false)}\n                  to={page.pageLink}\n                  key={i}\n                >\n                  <span\n                    {...navLinkProps(\n                      page.pageLink,\n                      page.animationDelayForNavbar\n                    )}\n                  >\n                    {page.displayName}\n                  </span>\n                </Link>\n              );\n            })}\n          </div>\n        </div>\n\n        <div className=\"navbar-right\">\n          <div\n            className=\"navbar-toggle\"\n            onClick={() => {\n              setMenuVisible(!menuVisible);\n            }}\n          >\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\n\nfunction Links(props) {\n  return (\n    <div className=\"Links\">\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.2s'}}>\n        <h3>HELPLINE NUMBERS [by State]</h3>\n        <a\n          href=\"https://www.mohfw.gov.in/pdf/coronvavirushelplinenumber.pdf\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.mohfw.gov.in/pdf/coronvavirushelplinenumber.pdf\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <h3>Ministry of Health and Family Welfare, Gov. of India</h3>\n        <a\n          href=\"https://www.mohfw.gov.in/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.mohfw.gov.in/\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.4s'}}>\n        <h3>WHO : COVID-19 Home Page</h3>\n        <a\n          href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.who.int/emergencies/diseases/novel-coronavirus-2019\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.5s'}}>\n        <h3>CDC</h3>\n        <a\n          href=\"https://www.cdc.gov/coronavirus/2019-ncov/faq.html\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.cdc.gov/coronavirus/2019-ncov/faq.html\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.6s'}}>\n        <h3>Crowdsourced list of Resources & Essentials from across India</h3>\n        <a\n          href=\"https://bit.ly/covid19resourcelist\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://bit.ly/covid19resourcelist\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.7s'}}>\n        <h3>COVID-19 Global Tracker</h3>\n        <a\n          href=\"https://coronavirus.thebaselab.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://coronavirus.thebaselab.com/\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Links;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nfunction FAQ(props) {\n  const [faq, setFaq] = useState([]);\n\n  useEffect(() => {\n    getFAQs();\n  }, []);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const getFAQs = () => {\n    axios\n      .get('https://api.covid19india.org/website_data.json')\n      .then((response) => {\n        setFaq(response.data['faq']);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div className=\"FAQ\">\n      {faq.map((faq, index) => {\n        return (\n          <div\n            key={index}\n            className=\"faq fadeInUp\"\n            style={{animationDelay: `${0.5 + index * 0.1}s`}}\n          >\n            <h2 className=\"question\">{faq.question}</h2>\n            <h2\n              className=\"answer\"\n              dangerouslySetInnerHTML={{__html: faq.answer}}\n            ></h2>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FAQ;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport axios from 'axios';\n\nfunction Banner(props) {\n  const [snippets, setSnippets] = useState([]);\n  const [snippet, setSnippet] = useState();\n\n  useEffect(() => {\n    axios\n      .get('https://api.covid19india.org/website_data.json')\n      .then((response) => {\n        setSnippets(response.data.factoids || []);\n        setSnippet(\n          response.data.factoids[\n            Math.floor(\n              Math.random() * (response.data.factoids.length - 1 - 0) + 0\n            )\n          ] || ''\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const snippetChooser = useCallback(\n    (min, max) => {\n      const index = Math.random() * (max - min) + min;\n      setSnippet(snippets[Math.floor(index)]);\n    },\n    [snippets]\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      snippetChooser(0, snippets.length - 1);\n    }, 10000);\n    return () => clearInterval(interval);\n  }, [snippetChooser, snippets]);\n\n  if (window.location.pathname !== '/database') {\n    return (\n      <div\n        onClick={() => snippetChooser(0, snippets.length - 1)}\n        className=\"Banner fadeInUp\"\n        style={{animationDelay: '0.8s'}}\n      >\n        <div className=\"snippet\">{snippet ? snippet.banner : ''} &nbsp;</div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nexport default Banner;\n","import React from 'react';\nimport {format} from 'date-fns';\n\nfunction PatientsView(props) {\n  const logs = props.logs;\n\n  return (\n    <div className=\"Patients fadeInUp\" style={{animationDelay: '1s'}}>\n      {Object.keys(logs)\n        .slice(props.summary ? -1 : 0)\n        .map((day, index) => {\n          if (day !== 'Invalid Date') {\n            return (\n              <React.Fragment key={index}>\n                <h5 className=\"daylabel\">\n                  {format(new Date(day), 'dd MMM, yyyy')}{' '}\n                  {'(' + logs[day].length + ')'}\n                </h5>\n                <div\n                  key={index}\n                  className={`day ${props.summary ? 'summary' : ''}`}\n                >\n                  {logs[day]\n                    .slice(props.summary ? -40 : 0)\n                    .map((patient, indexTwo) => {\n                      return (\n                        <div\n                          key={indexTwo}\n                          className={props.applyClass(patient)}\n                          onClick={() => {\n                            props.setModal(true);\n                            props.setPatient(patient);\n                          }}\n                        >\n                          <h3>\n                            {props.expand ? `P${patient.patientnumber}` : ''}\n                          </h3>\n                        </div>\n                      );\n                    })}\n                </div>\n              </React.Fragment>\n            );\n          } else {\n            return null;\n          }\n        })}\n    </div>\n  );\n}\n\nexport default PatientsView;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {parse} from 'date-fns';\nimport * as Icon from 'react-feather';\nimport PatientsView from './patientsview';\n\nfunction Patients(props) {\n  const [patients, setPatients] = useState(props.patients);\n  const [patient, setPatient] = useState(props.patients.slice(-1));\n  const [logs, setLogs] = useState({});\n  const [modal, setModal] = useState(false);\n\n  // When the user clicks anywhere outside of the modal, close modal\n  window.onclick = function (event) {\n    const modal = document.getElementById('modal');\n    if (event.target === modal) {\n      setModal(false);\n    }\n  };\n\n  useEffect(() => {\n    setPatients(props.patients);\n  }, [props.patients]);\n\n  useEffect(() => {\n    if (modal) document.body.classList.add('modal-open');\n    else document.body.classList.remove('modal-open'); // to remove modal-open class from body\n  }, [modal]);\n\n  const parseByDate = useCallback((patients) => {\n    const log = {};\n    for (let i = 0; i < patients.length; i++) {\n      const day = new Date(\n        parse(patients[i].dateannounced, 'dd/MM/yyyy', new Date())\n      );\n      if (!(day in log)) {\n        const list = [];\n        list.push(patients[i]);\n        log[day] = list;\n      } else {\n        const list = log[day];\n        list.push(patients[i]);\n        log[day] = list;\n      }\n    }\n    setLogs(log);\n  }, []);\n\n  useEffect(() => {\n    if (patients.length) {\n      parseByDate(patients);\n    }\n  }, [parseByDate, patients]);\n\n  const switchPatient = (patientIndexArg) => {\n    if (patientIndexArg === '') return;\n    try {\n      const patientIndex = patientIndexArg.slice(1);\n      // eslint-disable-next-line\n      patients.map((patient, index) => {\n        if (patient.patientnumber === patientIndex) setPatient(patient);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getClassNameFn = (colorMode) => {\n    switch (colorMode) {\n      case 'genders':\n        return (patient) => {\n          return `patient-card ${\n            patient.gender === 'F'\n              ? 'is-femme'\n              : patient.gender === 'M'\n              ? 'is-male'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'transmission':\n        return (patient) => {\n          return `patient-card ${\n            patient.typeoftransmission === 'Local'\n              ? 'is-local'\n              : patient.typeoftransmission === 'Imported'\n              ? 'is-imported'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'nationality':\n        return (patient) => {\n          return `patient-card ${\n            patient.nationality === 'India'\n              ? 'is-in'\n              : patient.nationality === 'Myanmar'\n              ? 'is-mm'\n              : patient.nationality === 'Indonesia'\n              ? 'is-id'\n              : patient.nationality === 'United Kingdom'\n              ? 'is-uk'\n              : patient.nationality === 'United States of America'\n              ? 'is-us'\n              : patient.nationality === 'Thailand'\n              ? 'is-th'\n              : patient.nationality === 'Phillipines'\n              ? 'is-ph'\n              : patient.nationality === 'Italy'\n              ? 'is-it'\n              : patient.nationality === 'Canada'\n              ? 'is-ca'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'age':\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n      default:\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PatientsView\n        logs={logs}\n        setModal={setModal}\n        setPatient={setPatient}\n        expand={props.expand}\n        applyClass={getClassNameFn(props.colorMode)}\n      />\n\n      {modal && (\n        <div className=\"modal\" id=\"modal\">\n          <div\n            className={`modal-content ${modal ? 'fadeInUp' : 'fadeOutDown'}`}\n          >\n            <div className=\"close-button\">\n              <Icon.XCircle\n                onClick={() => {\n                  setModal(false);\n                }}\n              />\n            </div>\n\n            <div className=\"modal-top\">\n              <h1>#{patient.patientnumber}</h1>\n            </div>\n\n            <div className=\"meta\">\n              <h5>Date Announced</h5>\n              <h3>{patient.dateannounced ? patient.dateannounced : '?'}</h3>\n\n              <h5>Contracted from</h5>\n              <h3\n                className=\"contracted-from\"\n                onClick={() => {\n                  switchPatient(patient.contractedfromwhichpatientsuspected);\n                }}\n              >\n                {patient.contractedfromwhichpatientsuspected\n                  ? patient.contractedfromwhichpatientsuspected\n                  : '?'}\n              </h3>\n\n              <h5>Detected City</h5>\n              <h3>{patient.detectedcity ? patient.detectedcity : '?'}</h3>\n\n              <h5>Detected District</h5>\n              <h3>\n                {patient.detecteddistrict ? patient.detecteddistrict : '?'}\n              </h3>\n\n              <h5>Detected State</h5>\n              <h3>{patient.detectedstate ? patient.detectedstate : '?'}</h3>\n\n              <h5>Nationality</h5>\n              <h3>{patient.nationality ? patient.nationality : '?'}</h3>\n\n              <h5>Age</h5>\n              <h3>{patient.agebracket ? patient.agebracket : '?'}</h3>\n\n              <h5>Gender</h5>\n              <h3>{patient.gender ? patient.gender : '?'}</h3>\n\n              <h5>State Patient Number</h5>\n              <h3>\n                {patient.statepatientnumber ? patient.statepatientnumber : '?'}\n              </h3>\n\n              <h5>Type of transmission</h5>\n              <h3>\n                {patient.typeoftransmission ? patient.typeoftransmission : '?'}\n              </h3>\n            </div>\n\n            <div className=\"notes\">\n              <h5>Notes</h5>\n              <h3>{patient.notes}</h3>\n            </div>\n\n            <h5>Source 1</h5>\n            <div className=\"link\">\n              <a href={patient.source1} target=\"_noblank\">\n                {patient.source1}\n              </a>\n            </div>\n\n            <h5>Source 2</h5>\n            <div className=\"link\">\n              <a href={patient.source2} target=\"_noblank\">\n                {patient.source2}\n              </a>\n            </div>\n\n            <h5>Source 3</h5>\n            <div className=\"link\">\n              <a href={patient.source3} target=\"_noblank\">\n                {patient.source3}\n              </a>\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Patients;\n","import React from 'react';\nimport {Parser} from 'json2csv';\nimport * as Icon from 'react-feather';\n\nfunction CSVDownloadLink(props) {\n  if (!props.patients) {\n    return '';\n  }\n  try {\n    const parser = new Parser(Object.keys(props.patients[0]));\n    const csv = parser.parse(props.patients);\n    const data = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv);\n    return (\n      <a href={data} download=\"patients.csv\">\n        <code>CSV</code>\n      </a>\n    );\n  } catch (e) {\n    console.log(e);\n    return (\n      <a href=\"/\">\n        <code>CSV</code>\n      </a>\n    );\n  }\n}\n\nfunction DownloadBlock(props) {\n  if (!props.patients) {\n    return '';\n  }\n\n  const dataJSON =\n    'data:text/json;charset=utf-8,' +\n    encodeURIComponent(JSON.stringify(props.patients));\n\n  return (\n    <div className=\"DownloadBlock fadeInUp\" style={{animationDelay: '0.5s'}}>\n      <button className=\"button\">\n        <Icon.Download />\n        <CSVDownloadLink patients={props.patients} />\n      </button>\n      <button className=\"button\">\n        <Icon.Download />\n        <a href={dataJSON} download=\"patients.json\">\n          JSON\n        </a>\n      </button>\n    </div>\n  );\n}\n\nexport default DownloadBlock;\n","import React, {useState, useEffect} from 'react';\nimport {useLocation} from 'react-router-dom';\nimport axios from 'axios';\nimport {format, parse, subDays} from 'date-fns';\n\nimport Patients from './patients';\nimport DownloadBlock from './downloadblock';\n\nfunction filterByObject(obj, filters) {\n  const keys = Object.keys(filters);\n  return obj.filter((p) => {\n    return keys.every((key) => {\n      if (!filters[key].length) return true;\n      return p[key] === filters[key];\n    });\n  });\n}\n\nfunction PatientDB(props) {\n  const [fetched, setFetched] = useState(false);\n  const [patients, setPatients] = useState([]);\n  const [filteredPatients, setFilteredPatients] = useState([]);\n  const [error, setError] = useState('');\n  const {pathname} = useLocation();\n  const [colorMode, setColorMode] = useState('genders');\n  const [scaleMode, setScaleMode] = useState(false);\n  const [filters, setFilters] = useState({\n    detectedstate: '',\n    detecteddistrict: '',\n    detectedcity: '',\n    dateannounced: format(subDays(new Date(), 1), 'dd/MM/yyyy'),\n  });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  useEffect(() => {\n    async function fetchRawData() {\n      const response = await axios.get(\n        'https://api.covid19india.org/raw_data.json'\n      );\n      if (response.data) {\n        setPatients(response.data.raw_data.reverse());\n        setFetched(true);\n      } else {\n        setError(\"Couldn't fetch patient data. Try again after sometime.\");\n        console.log(response);\n      }\n    }\n\n    if (!fetched) {\n      fetchRawData();\n    }\n  }, [fetched]);\n\n  const handleFilters = (label, value) => {\n    setFilters((f) => {\n      // Create new object (deep copy)\n      const newFilters = {...f};\n      newFilters[label] = value;\n      if (label === 'detectedstate') {\n        const district = document.getElementById('district');\n        const city = document.getElementById('city');\n        // Hide boxes\n        if (value === '') district.style.display = 'none';\n        else district.style.display = 'inline';\n        city.style.display = 'none';\n        // Default to empty selection\n        district.selectedIndex = 0;\n        city.selectedIndex = 0;\n        newFilters['detecteddistrict'] = '';\n        newFilters['detectedcity'] = '';\n      } else if (label === 'detecteddistrict') {\n        const city = document.getElementById('city');\n        // Hide box\n        if (value === '') city.style.display = 'none';\n        else city.style.display = 'inline';\n        // Default to empty selection\n        city.selectedIndex = 0;\n        newFilters['detectedcity'] = '';\n      }\n      return newFilters;\n    });\n  };\n\n  useEffect(() => {\n    setFilteredPatients(filterByObject(patients, filters));\n  }, [patients, filters]);\n\n  function getSortedValues(obj, key) {\n    const setValues = new Set(obj.map((p) => p[key]));\n    if (setValues.size > 1) setValues.add('');\n    if (key === 'dateannounced') return Array.from(setValues);\n    return Array.from(setValues).sort();\n  }\n\n  return (\n    <div className=\"PatientsDB\">\n      {error ? <div className=\"alert alert-danger\">{error}</div> : ''}\n\n      <div className=\"filters fadeInUp\" style={{animationDelay: '0.5s'}}>\n        <div className=\"filters-left\">\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.3s'}}\n              id=\"state\"\n              onChange={(event) => {\n                handleFilters('detectedstate', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select State\n              </option>\n              {getSortedValues(patients, 'detectedstate').map(\n                (state, index) => {\n                  return (\n                    <option key={index} value={state}>\n                      {state === '' ? 'All' : state}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"district\"\n              onChange={(event) => {\n                handleFilters('detecteddistrict', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select District\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                }),\n                'detecteddistrict'\n              ).map((district, index) => {\n                return (\n                  <option key={index} value={district}>\n                    {district === '' ? 'All' : district}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s'}}\n              id=\"district\"\n              onChange={(event) => {\n                handleFilters('dateannounced', event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Select Day\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                }),\n                'dateannounced'\n              ).map((date, index) => {\n                return (\n                  <option key={index} value={date}>\n                    {date === ''\n                      ? 'All'\n                      : format(\n                          parse(date, 'dd/MM/yyyy', new Date()),\n                          'dd MMM, yyyy'\n                        )}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          {/* <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                handleFilters('dateannounced', event.target.value);\n              }}\n            >\n              {Array.from(new Set(patients.map((p) => p.dateannounced))).map(\n                (date, index) => {\n                  return (\n                    <option key={index} value={date}>\n                      {date}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>*/}\n        </div>\n\n        <div className=\"legend\">\n          {colorMode === 'genders' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-female\"></div>\n              <h5 className=\"is-female\">Female</h5>\n              <div className=\"circle is-male\"></div>\n              <h5 className=\"is-male\">Male</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">Unknown</h5>\n            </div>\n          )}\n\n          {colorMode === 'transmission' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-local\"></div>\n              <h5 className=\"is-local\">Local</h5>\n              <div className=\"circle is-imported\"></div>\n              <h5 className=\"is-imported\">Imported</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">TBD</h5>\n            </div>\n          )}\n\n          {colorMode === 'nationality' && (\n            <div className=\"legend-left nationality\">\n              <div className=\"circle is-in\"></div>\n              <h5 className=\"is-in\">In</h5>\n              <div className=\"circle is-uk\"></div>\n              <h5 className=\"is-uk\">Uk</h5>\n              <div className=\"circle is-us\"></div>\n              <h5 className=\"is-us\">Us</h5>\n              <div className=\"circle is-th\"></div>\n              <h5 className=\"is-thailand\">Th</h5>\n              <div className=\"circle is-ph\"></div>\n              <h5 className=\"is-ph\">Ph</h5>\n              <div className=\"circle is-it\"></div>\n              <h5 className=\"is-it\">It</h5>\n              <div className=\"circle is-ca\"></div>\n              <h5 className=\"is-ca\">Ca</h5>\n              <div className=\"circle is-id\"></div>\n              <h5 className=\"is-id\">Id</h5>\n              <div className=\"circle is-mm\"></div>\n              <h5 className=\"is-mm\">Mm</h5>\n            </div>\n          )}\n\n          <div className={`select ${colorMode}`}>\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                setColorMode(event.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Color modes\n              </option>\n              <option value=\"genders\">Genders</option>\n              <option value=\"transmission\">Transmission</option>\n              <option value=\"nationality\">Nationality</option>\n              {/* <option value=\"age\">Age</option>*/}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"header fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <div>\n          <h1>Demographics</h1>\n          {/* <h3>No. of Patients: {patients.length}</h3>*/}\n\n          <div className=\"deep-dive\">\n            <h5>Expand</h5>\n            <input\n              type=\"checkbox\"\n              checked={scaleMode}\n              onChange={(event) => {\n                setScaleMode(!scaleMode);\n              }}\n              className=\"switch\"\n            />\n          </div>\n        </div>\n        <h6 className=\"disclaimer\">\n          Some of the data provided might be missing/unknown as the details have\n          not been shared by the state/central governments.\n        </h6>\n      </div>\n\n      <div className=\"reminder fadeInUp\" style={{animationDelay: '1s'}}>\n        <p>\n          It is important that we do not think of these as just tiny boxes,\n          numbers, or just another part of statistics - among these are our\n          neighbors, our teachers, our healthcare workers, our supermarket\n          vendors, our friends, our co-workers, our children or our\n          grandparents.\n          <br />\n          <br />\n          Among these are our people.\n        </p>\n      </div>\n\n      <div className=\"patientdb-wrapper\">\n        <Patients\n          patients={filteredPatients}\n          colorMode={colorMode}\n          expand={scaleMode}\n        />\n      </div>\n      <DownloadBlock patients={patients} />\n    </div>\n  );\n}\n\nexport default PatientDB;\n","import React from 'react';\nimport {Doughnut, defaults} from 'react-chartjs-2';\n\nfunction GenderChart(props) {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  let male = 0;\n  let female = 0;\n  let unknown = 0;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.gender === 'M') {\n      male++;\n    } else if (patient.gender === 'F') {\n      female++;\n    } else {\n      unknown++;\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: [male, female, unknown],\n        backgroundColor: ['blue', 'pink', 'grey'],\n        label: 'Hola',\n      },\n    ],\n    labels: ['Male', 'Female', 'Awaiting Details'],\n  };\n\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'point',\n      position: 'nearest',\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return currentValue + ' (' + percentage + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n    </div>\n  );\n}\n\nexport default GenderChart;\n","import React from 'react';\nimport {Bar, defaults} from 'react-chartjs-2';\n\nfunction AgeChart(props) {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  const ages = Array(10).fill(0);\n  let unknown = 0;\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.agebracket) {\n      const age = parseInt(patient.agebracket);\n      for (let i = 0; i < 10; i++) {\n        if (age > i * 10 && age <= (i + 1) * 10) {\n          ages[i]++;\n        }\n      }\n    } else {\n      unknown++;\n    }\n  });\n\n  const chartData = {\n    labels: [\n      '0-10',\n      '11-20',\n      '21-30',\n      '31-40',\n      '41-50',\n      '51-60',\n      '61-70',\n      '71-80',\n      '81-90',\n      '91-100',\n    ],\n    datasets: [\n      {\n        data: ages,\n        label: 'Cases',\n        backgroundColor: '#ff073a',\n      },\n    ],\n  };\n\n  const chartOptions = {\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 0,\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Bar data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">*Awaiting details for {unknown} patients</div>\n    </div>\n  );\n}\n\nexport default AgeChart;\n","import React from 'react';\nimport {Doughnut, defaults} from 'react-chartjs-2';\n\nfunction NationalityChart(props) {\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const nationality = {};\n  let unknown = 0;\n\n  props.data.forEach((patient) => {\n    if (!patient.nationality) {\n      unknown++;\n      return;\n    }\n    if (!nationality.hasOwnProperty(patient.nationality.toLowerCase())) {\n      nationality[patient.nationality.toLowerCase()] = 0;\n    }\n    nationality[patient.nationality.toLowerCase()]++;\n  });\n\n  // delete nationality.india;\n  const data = [];\n  const labels = [];\n\n  Object.keys(nationality).forEach((country) => {\n    if (country) {\n      labels.push(country.toUpperCase());\n      data.push(nationality[country]);\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: data,\n        backgroundColor: [\n          '#ff7272',\n          '#ffb385',\n          '#fae7cb',\n          '#ffd31d',\n          '#00a8cc',\n          '#005082',\n          '#000839',\n          '#ffa41b',\n          '#f1e7b6',\n          '#400082',\n          '#fe346e',\n          '#5a3f11',\n          '#9c5518',\n          '#f67575',\n          '#d4f8e8',\n          '#1eb2a6',\n        ],\n      },\n    ],\n    labels: labels,\n  };\n\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    legend: {\n      display: false,\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'point',\n      events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return currentValue + ' (' + percentage + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">*Awaiting details for {unknown} patients</div>\n    </div>\n  );\n}\n\nexport default NationalityChart;\n","import React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\nimport moment from 'moment';\nimport {getStateName} from '../../utils/common-functions';\nfunction AllStatesChart(props) {\n  const dates = [];\n\n  defaults.global.elements.line.fill = false;\n\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const statesData = new Map();\n\n  props.data.forEach((data, index) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach((key) => {\n      if (key === 'date') {\n        dates.push(moment(data.date.trim(), 'DD MMM'));\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n      }\n      const previousValue =\n        statesData.get(key).length > 0\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1])\n          : 0;\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n      statesData.get(key).push(previousValue + currentValue);\n    });\n  });\n\n  const sortedMap = new Map(\n    [...statesData.entries()].sort((a, b) => {\n      return a[1][a[1].length - 1] < b[1][b[1].length - 1] ? 1 : -1;\n    })\n  );\n\n  const colors = [\n    '#ff073a',\n    '#28a745',\n    '#342ead',\n    '#7D5BA6',\n    '#DD7596',\n    '#16c8f0',\n    '#f67575',\n    '#2b580c',\n    '#9D44B5',\n    '#91132d',\n    '#6D9DC5',\n    '#2b580c',\n    '#6c757d',\n    '#f67575',\n    '#d4f8e8',\n  ];\n\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      borderWidth: 1.5,\n      data: statesData.get(key),\n      borderCapStyle: 'round',\n      pointBackgroundColor: colors[index],\n      label: getStateName(key),\n      borderColor: colors[index],\n      pointHoverRadius: 0.5,\n    });\n\n    index++;\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: datasets,\n  };\n\n  const options = {\n    responsive: true,\n    events: ['click', 'mousemove', 'mouseout', 'touchstart', 'touchmove'],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0,\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default AllStatesChart;\n","import React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\nimport moment from 'moment';\n\nfunction TotalConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  defaults.global.elements.line.fill = false;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 31) {\n      dates.push(moment(data.date.trim(), 'DD MMM'));\n      confirmed.push(data.totalconfirmed);\n      recovered.push(data.totalrecovered);\n      deceased.push(data.totaldeceased);\n    }\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: [\n      {\n        borderWidth: 2,\n        data: confirmed,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#ff073a',\n        label: 'Confirmed',\n        borderColor: '#ff073a',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: recovered,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#28a745',\n        label: 'Recovered',\n        borderColor: '#28a745',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: deceased,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#6c757d',\n        label: 'Deceased',\n        borderColor: '#6c757d',\n        pointHoverRadius: 2,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    events: [\n      'click',\n      'mousemove',\n      'mouseout',\n      'touchstart',\n      'touchmove',\n      'touchend',\n    ],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0.1,\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n    },\n  };\n\n  if (props.mode) {\n    options.scales.yAxes = [\n      {\n        type: 'logarithmic',\n        ticks: {\n          min: 0,\n          max: 10000,\n          callback: function (value, index, values) {\n            if (value === 10000) return '10000';\n            if (value === 2000) return '2500';\n            if (value === 500) return '500';\n            if (value === 100) return '100';\n            if (value === 20) return '25';\n            if (value === 5) return '5';\n            if (value === 0) return '0';\n            return null;\n          },\n        },\n        scaleLabel: {\n          display: false,\n          labelString: 'Total Cases',\n        },\n      },\n    ];\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default TotalConfirmedChart;\n","import React from 'react';\nimport {Bar, defaults} from 'react-chartjs-2';\nimport moment from 'moment';\n\nfunction DailyConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  defaults.global.elements.line.fill = false;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n  defaults.global.hover.intersect = false;\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 31) {\n      dates.push(moment(data.date.trim(), 'DD MMM').format('DD MMM'));\n      confirmed.push(\n        data.dailyconfirmed - data.dailyrecovered - data.dailydeceased\n      );\n      recovered.push(data.dailyrecovered);\n      deceased.push(data.dailydeceased);\n    }\n  });\n\n  const barDataSet = {\n    labels: dates,\n    datasets: [\n      {\n        data: recovered,\n        label: 'Recovered',\n        backgroundColor: '#28a745',\n      },\n      {\n        data: deceased,\n        label: 'Deceased',\n        backgroundColor: '#6c757d',\n      },\n      {\n        data: confirmed,\n        label: 'Active',\n        backgroundColor: '#ff073a',\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    tooltips: {\n      mode: 'index',\n    },\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20,\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Bar data={barDataSet} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default DailyConfirmedChart;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport GenderChart from './Charts/genderchart';\nimport AgeChart from './Charts/agechart';\nimport NationalityChart from './Charts/nationalitychart';\nimport AllStatesChart from './Charts/allstates';\nimport TotalConfirmedChart from './Charts/totalconfirmedchart';\nimport DailyConfirmedChart from './Charts/dailyconfirmedchart';\n\nfunction DeepDive(props) {\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState([]);\n  const [rawData, setRawData] = useState([]);\n  const [statesTimeSeries, setStatesTimeSeries] = useState([]);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        response,\n        rawDataResponse,\n        stateDailyResponse,\n      ] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/raw_data.json'),\n        axios.get('https://api.covid19india.org/states_daily.json'),\n      ]);\n      setTimeseries(response.data.cases_time_series);\n      setStatesTimeSeries(stateDailyResponse.data.states_daily);\n      setRawData(rawDataResponse.data.raw_data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"cards-container\">\n      <section className=\"cards\">\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <TotalConfirmedChart\n            title=\"India - Total Cases\"\n            timeseries={timeseries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <DailyConfirmedChart\n            title=\"India - Daily Cases\"\n            timeseries={timeseries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AllStatesChart\n            title=\"States - Total Cases\"\n            data={statesTimeSeries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <GenderChart title=\"Patient Gender\" data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AgeChart title=\"Patient Age\" data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <NationalityChart title=\"Patient Nationality\" data={rawData} />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default DeepDive;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useTable, usePagination} from 'react-table';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n// import Divider from '@material-ui/core/Divider';\n\nconst usePanelSummaryStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  root: {\n    backgroundColor: '#201aa220',\n    height: '4rem',\n  },\n}));\n\nconst usePanelStyles = makeStyles((theme) => ({\n  root: {\n    width: 'calc(100%-0.2rem)',\n    marginBottom: '0.2rem',\n  },\n}));\nconst useItemTextStyles = makeStyles((theme) => ({\n  primary: {\n    fontFamily: 'Archia',\n    fontWeight: 500,\n    fontStyle: 'normal',\n    fontSize: '13px',\n    fontTransform: 'uppercase',\n  },\n  secondary: {\n    fontFamily: 'Archia',\n    fontWeight: 400,\n    fontStyle: 'normal',\n    fontSize: '12px',\n    // fontTransform: 'uppercase'\n  },\n}));\n\nconst getFormattedLink = (initialValue) => {\n  const reurl1 = /\\s*(https?:\\/\\/.+)\\s*/g;\n  // let reurl2 = /\\s*.*(www\\..+)\\s*/g\n  const reinsta = /\\s*Instagram: @(.+)\\s*/g;\n  const refb = /\\s*Facebook: @(.+)\\s*/g;\n  const s1 = initialValue.replace(reurl1, '<a href=\"$1\" target=\"_blank\">Link</a>');\n  const s2 = s1.replace(\n    reinsta,\n    '<a href=\"https://www.instagram.com/$1\" target=\"_blank\">Instagram: @$1</a>'\n  );\n  const s3 = s2.replace(\n    refb,\n    '<a href=\"https://www.facebook.com/$1\" target=\"_blank\">Facebook: @$1</a>'\n  );\n  return (\n    <div\n      className=\"tablecelldata\"\n      dangerouslySetInnerHTML={{\n        __html: s3,\n      }}\n    ></div>\n  );\n};\n\nconst FormattedCell = ({value: initialValue, editable}) => {\n  // We need to keep and update the state of the cell normally\n  const [value, setValue] = React.useState(initialValue);\n  const reurl1 = /\\s*(https?:\\/\\/.+)\\s*/g;\n  // let reurl2 = /\\s*.*(www\\..+)\\s*/g\n  const reinsta = /\\s*Instagram: @(.+)\\s*/g;\n  const refb = /\\s*Facebook: @(.+)\\s*/g;\n\n  // If the initialValue is changed externall, sync it up with our state\n  React.useEffect(() => {\n    const s1 = initialValue.replace(reurl1, '<a href=\"$1\" target=\"_blank\">Link</a>');\n    const s2 = s1.replace(\n      reinsta,\n      '<a href=\"https://www.instagram.com/$1\" target=\"_blank\">Instagram: @$1</a>'\n    );\n    const s3 = s2.replace(\n      refb,\n      '<a href=\"https://www.facebook.com/$1\" target=\"_blank\">Facebook: @$1</a>'\n    );\n    // let s4 = s3.replace(reurl2, '<a href=\"http://$1\">Link</a>');\n    setValue(s3);\n  }, [initialValue, reurl1, refb, reinsta]);\n\n  return (\n    <div\n      className=\"tablecelldata\"\n      dangerouslySetInnerHTML={{\n        __html: value,\n      }}\n    ></div>\n  );\n};\n\nfunction ResourceTable({columns, data, isDesktop}) {\n  const classesPannelSummary = usePanelSummaryStyles();\n  const classesPanel = usePanelStyles();\n  const classesListItemText = useItemTextStyles();\n  const defaultColumn = React.useMemo(\n    () => ({\n      Cell: FormattedCell,\n    }),\n    []\n  );\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {pageIndex, pageSize},\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      initialState: {pageIndex: 0, pageSize: 5},\n    },\n    usePagination\n  );\n\n  // Render the UI for your table\n  if (isDesktop === true)\n    return (\n      <div className=\"tableandcontrols\">\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr key={headerGroup.id} {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th key={column.id} {...column.getHeaderProps()}>\n                    {column.render('Header')}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {page.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr key={row.id} {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td key={cell.id} {...cell.getCellProps()}>\n                        {cell.render('Cell', {editable: false})}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <div className=\"pagination\">\n          <div className=\"paginationbutton\">\n            <button\n              className=\"button is-purple\"\n              onClick={() => gotoPage(0)}\n              disabled={!canPreviousPage}\n            >\n              {'\\u003c\\u003c'}\n            </button>{' '}\n            <button\n              className=\"button is-purple\"\n              onClick={() => previousPage()}\n              disabled={!canPreviousPage}\n            >\n              {'<'}\n            </button>{' '}\n            <button\n              className=\"button is-purple\"\n              onClick={() => nextPage()}\n              disabled={!canNextPage}\n            >\n              {'>'}\n            </button>{' '}\n            <button\n              className=\"button is-purple\"\n              onClick={() => gotoPage(pageCount - 1)}\n              disabled={!canNextPage}\n            >\n              {'>>'}\n            </button>{' '}\n          </div>\n          <h5 style={{color: '#201aa299'}}>\n            Page{' '}\n            <strong>\n              {pageIndex + 1} of {pageOptions.length}\n            </strong>{' '}\n          </h5>\n          {/* <h5 style={{marginLeft:'0.2rem'}}>\n                     Go to page:{' '}\n                </h5> */}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\n              gotoPage(page);\n            }}\n          />\n\n          <select\n            className=\"select\"\n            value={pageSize}\n            onChange={(e) => {\n              setPageSize(Number(e.target.value));\n            }}\n          >\n            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    );\n  else\n    return (\n      <div className=\"resourcesaccordion\">\n        {page.map((row, i) => {\n          prepareRow(row);\n          return (\n            <ExpansionPanel key={row.id} classes={{root: classesPanel.root}}>\n              <ExpansionPanelSummary\n                classes={{\n                  content: classesPannelSummary.content,\n                  root: classesPannelSummary.root,\n                }}\n              >\n                {/* <div className=\"expanelheading\"\n                                 style={{display: 'flex',\n                                         flexDirection: 'row',\n                                         justifyContent: 'space-between',\n                                         backgroundColor: 'blue'}}> */}\n                <div\n                  className=\"orgname\"\n                  style={{\n                    maxWidth: '10rem',\n                    textAlign: 'start',\n                    color: '#201aa2dd',\n                  }}\n                >\n                  <h6>{row.values['nameoftheorganisation']}</h6>\n                </div>\n                <div\n                  className=\"orgcategory\"\n                  style={{maxWidth: '10.9rem', textAlign: 'end'}}\n                >\n                  <h6>{row.values['category']}</h6>\n                </div>\n                {/* </div> */}\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <List disablePadding={true} dense={true}>\n                  <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                    <ListItemText\n                      primary=\"Organisation Name\"\n                      secondary={row.values['nameoftheorganisation']}\n                      classes={{\n                        primary: classesListItemText.primary,\n                        secondary: classesListItemText.secondary,\n                      }}\n                    />\n                  </ListItem>\n                  <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                    <ListItemText\n                      primary=\"Location\"\n                      secondary={row.values['city']}\n                      classes={{\n                        primary: classesListItemText.primary,\n                        secondary: classesListItemText.secondary,\n                      }}\n                    />\n                  </ListItem>\n                  <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                    <ListItemText\n                      primary=\"Description\"\n                      secondary={row.values['descriptionandorserviceprovided']}\n                      classes={{\n                        primary: classesListItemText.primary,\n                        secondary: classesListItemText.secondary,\n                      }}\n                    />\n                  </ListItem>\n                  <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                    <ListItemText\n                      primary=\"Category\"\n                      secondary={row.values['category']}\n                      classes={{\n                        primary: classesListItemText.primary,\n                        secondary: classesListItemText.secondary,\n                      }}\n                    />\n                  </ListItem>\n                  <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                    <ListItemText\n                      primary=\"Phonenumber\"\n                      secondary={getFormattedLink(row.values['phonenumber'])}\n                      classes={{\n                        primary: classesListItemText.primary,\n                        secondary: classesListItemText.secondary,\n                      }}\n                    />\n                  </ListItem>\n                  <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                    <ListItemText\n                      primary=\"Website\"\n                      secondary={getFormattedLink(row.values['contact'])}\n                      classes={{\n                        primary: classesListItemText.primary,\n                        secondary: classesListItemText.secondary,\n                      }}\n                    />\n                  </ListItem>\n                </List>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          );\n        })}\n        <div className=\"pagination\">\n          <div className=\"paginationbutton\">\n            <button\n              className=\"button is-purple\"\n              onClick={() => gotoPage(0)}\n              disabled={!canPreviousPage}\n            >\n              {'\\u003c\\u003c'}\n            </button>{' '}\n            <button\n              className=\"button is-purple\"\n              onClick={() => previousPage()}\n              disabled={!canPreviousPage}\n            >\n              {'<'}\n            </button>{' '}\n            <button\n              className=\"button is-purple\"\n              onClick={() => nextPage()}\n              disabled={!canNextPage}\n            >\n              {'>'}\n            </button>{' '}\n            <button\n              className=\"button is-purple\"\n              onClick={() => gotoPage(pageCount - 1)}\n              disabled={!canNextPage}\n            >\n              {'>>'}\n            </button>{' '}\n          </div>\n          <h5 style={{color: '#201aa299'}}>\n            Page{' '}\n            <strong>\n              {pageIndex + 1} of {pageOptions.length}\n            </strong>{' '}\n          </h5>\n          {/* <h5 style={{marginLeft:'0.2rem'}}>\n                     Go to page:{' '}\n                </h5> */}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\n              gotoPage(page);\n            }}\n          />\n\n          <select\n            className=\"select\"\n            value={pageSize}\n            onChange={(e) => {\n              setPageSize(Number(e.target.value));\n            }}\n          >\n            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    );\n}\n\nexport default ResourceTable;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport ResourceTable from './resourcetable';\nimport axios from 'axios';\nfunction Resources(props) {\n  const [data, setData] = useState([]);\n  const [fetched, setFetched] = useState(false);\n  const [city, setCity] = useState('');\n  const [category, setCategory] = useState('');\n  const [indianstate, setIndianState] = useState('');\n  const [resourcedict, setResourceDict] = useState({});\n  const [showTable, setShowTable] = useState(false);\n  const [isDesktop, setIsDesktop] = useState(false);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getResources();\n    }\n  }, [fetched, data, resourcedict]);\n  const checkForResizeEvent = useCallback((event) => {\n    if (window.innerWidth > 639) setIsDesktop(true);\n    else setIsDesktop(false);\n    // console.log(isDesktop);\n  }, []);\n\n  useEffect(() => {\n    if (window.innerWidth > 639) setIsDesktop(true);\n    else setIsDesktop(false);\n    window.addEventListener('resize', checkForResizeEvent);\n    return () => {\n      window.removeEventListener('resize', checkForResizeEvent);\n    };\n  }, [isDesktop, checkForResizeEvent]);\n\n  const getResources = async () => {\n    try {\n      const [response] = await Promise.all([\n        axios.get('https://api.covid19india.org/resources/resources.json'),\n      ]);\n      // console.log(response)\n      // console.log(\"Column names are\")\n      // console.log(columns)\n      // setData(response.data.resources);\n      const hashmap = {};\n      response.data.resources.forEach((x) => {\n        // console.log(x)\n        if (typeof hashmap[x['state']] === 'undefined')\n          hashmap[x['state']] = {};\n        if (typeof hashmap[x['state']][x['city']] === 'undefined')\n          hashmap[x['state']][x['city']] = {};\n        if (\n          typeof hashmap[x['state']][x['city']][x['category']] === 'undefined'\n        )\n          hashmap[x['state']][x['city']][x['category']] = [];\n        if (Array.isArray(hashmap[x['state']][x['city']][x['category']]))\n          hashmap[x['state']][x['city']][x['category']].push(x);\n      });\n\n      setResourceDict(hashmap);\n      // setIndianState(Object.keys()[0]);\n\n      setFetched(true);\n      // console.log(resourcedict);\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n  const memocols = React.useMemo(\n    () => [\n      {\n        Header: 'City',\n        accessor: 'city',\n      },\n      {\n        Header: 'Category',\n        accessor: 'category',\n      },\n      {\n        Header: 'Organisation',\n        accessor: 'nameoftheorganisation',\n      },\n      {\n        Header: 'Description',\n        accessor: 'descriptionandorserviceprovided',\n      },\n      {\n        Header: 'Phone',\n        accessor: 'phonenumber',\n      },\n      {\n        Header: 'Website',\n        accessor: 'contact',\n      },\n    ],\n    []\n  );\n  // const memodata = React.useMemo(() => data, [data])\n\n  const getCityOptions = function () {\n    if (indianstate) {\n      return Object.keys(resourcedict[indianstate])\n        .sort()\n        .map((x) => (\n          <option key={x.id} value={x}>\n            {x}\n          </option>\n        ));\n    } else return [];\n    // return getCityList().map((x) => <option value={x}>{x}</option>)\n  };\n  const getIndianStateOptions = function () {\n    // let defaultOption = ['Please select']\n    return Object.keys(resourcedict)\n      .sort()\n      .map((x) => (\n        <option key={x.id} value={x}>\n          {x}\n        </option>\n      ));\n  };\n  const getCategoryOptions = function () {\n    if (indianstate && city) {\n      if (city === 'all') return [];\n      else {\n        return Object.keys(resourcedict[indianstate][city])\n          .sort()\n          .map((x) => (\n            <option key={x.id} value={x}>\n              {x}\n            </option>\n          ));\n      }\n    } else return [];\n  };\n\n  const filterTable = function () {\n    // console.log('Search Button Pressed');\n    // console.log(`Filters are: ${indianstate} ---> ${city} ----> ${category}`);\n    let a = [];\n    if (category === 'all') {\n      // console.log(\"All category selected\");\n      if (city === 'all') {\n        Object.values(resourcedict[indianstate]).forEach((citydata) => {\n          Object.values(citydata).forEach((category) => {\n            category.forEach((x) => a.push(x));\n          });\n        });\n      } else {\n        Object.values(resourcedict[indianstate][city]).forEach((x) => {\n          x.forEach((y) => a.push(y));\n        });\n      }\n    } else {\n      // console.log(`Category chosen ${category}`);\n      // a = resourcedict[indianstate][city][category];\n      if (city === 'all') {\n        Object.values(resourcedict[indianstate]).forEach((citydata) => {\n          if (category in citydata) {\n            citydata[category].forEach((x) => {\n              a.push(x);\n            });\n          }\n        });\n      } else {\n        a = resourcedict[indianstate][city][category];\n      }\n    }\n    try {\n      if ('PAN India' in resourcedict) {\n        resourcedict['PAN India']['Multiple']['CoVID-19 Testing Lab'].forEach(\n          (element) => {\n            a.push(element);\n          }\n        );\n      }\n    } catch (err) {\n      // console.log('No PAN India row found');\n    }\n    setData(a);\n    // console.log(resourcedict[indianstate][city][category]);\n    // console.log(data);\n    setShowTable(true);\n  };\n\n  const changeIndianState = function (changedstateevent) {\n    setIndianState(changedstateevent.target.value);\n    // setCity(\n    //   Object.keys(resourcedict[changedstateevent.target.value]).sort()[0]\n    // );\n    if (changedstateevent.target.value === '') {\n      setCity('');\n      document.getElementById('cityselect1').selectedIndex = 0;\n      setCategory('');\n      document.getElementById('categoryselect').selectedIndex = 0;\n    } else {\n      setCity('all');\n      document.getElementById('cityselect1').selectedIndex = 1;\n      setCategory('all');\n      document.getElementById('categoryselect').selectedIndex = 1;\n    }\n  };\n  const changeCity = function (changedcityevent) {\n    setCity(changedcityevent.target.value);\n    setCategory('all');\n    document.getElementById('categoryselect').selectedIndex = 1;\n  };\n  const changeCategory = function (changedcategoryevent) {\n    setCategory(changedcategoryevent.target.value);\n    // console.log(changedcategoryevent.target.value);\n  };\n  return (\n    <div className=\"Resources\">\n      <div className=\"filtersection\">\n        <div className=\"filtertitle\">\n          <h3>Apply filters and hit search</h3>\n        </div>\n        <div className=\"resourcefilters\">\n          <div className=\"resourcefilter\">\n            {/* <label for='stateselect1' className='filterlabel'>\n                            State\n                        </label> */}\n            <select\n              id=\"stateselect1\"\n              onChange={changeIndianState}\n              defaultValue=\"\"\n            >\n              <option value=\"\" disabled hidden>\n                Choose State\n              </option>\n              {getIndianStateOptions()}\n            </select>\n          </div>\n          <div className=\"resourcefilter\">\n            {/* <label for='cityselect1' className='filterlabel'>\n                            City\n                        </label> */}\n            <select\n              id=\"cityselect1\"\n              onChange={changeCity}\n              disabled={indianstate === ''}\n              defaultValue=\"\"\n            >\n              <option value=\"\" disabled hidden>\n                Choose City\n              </option>\n              <option value=\"all\">All Cities</option>\n              {getCityOptions()}\n            </select>\n          </div>\n          <div className=\"resourcefilter\">\n            {/* <label for='categoryselect' className='filterlabel'>\n                            Category\n                        </label> */}\n            <select\n              id=\"categoryselect\"\n              onChange={changeCategory}\n              disabled={indianstate === ''}\n              defaultValue=\"\"\n            >\n              <option value=\"\" disabled hidden>\n                Choose Category\n              </option>\n              <option value=\"all\">All Categories</option>\n              {getCategoryOptions()}\n            </select>\n          </div>\n          <div className=\"resourcefilter\">\n            <button\n              className=\"button is-purple\"\n              disabled={!indianstate}\n              onClick={filterTable}\n              style={!indianstate ? {pointerEvents: 'none'} : null}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n      <br></br>\n      <div className=\"TableArea fadeInOut\">\n        {showTable && (\n          <ResourceTable columns={memocols} data={data} isDesktop={isDesktop} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Resources;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport * as Icon from 'react-feather';\n\nimport './App.scss';\n\nimport Home from './components/home';\nimport Navbar from './components/navbar';\nimport Links from './components/links';\nimport FAQ from './components/faq';\nimport Banner from './components/banner';\nimport PatientDB from './components/patientdb';\nimport DeepDive from './components/deepdive';\nimport Resources from './components/resources';\n/* import PatientDB from './components/patientdb';*/\n\nconst history = require('history').createBrowserHistory;\n\nfunction App() {\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home,\n      displayName: 'Home',\n      animationDelayForNavbar: 0.2,\n    },\n    {\n      pageLink: '/demographics',\n      view: PatientDB,\n      displayName: 'Demographics',\n      animationDelayForNavbar: 0.3,\n    },\n    {\n      pageLink: '/deepdive',\n      view: DeepDive,\n      displayName: 'Deep Dive',\n      animationDelayForNavbar: 0.4,\n    },\n    {\n      pageLink: '/links',\n      view: Links,\n      displayName: 'Helpful Links',\n      animationDelayForNavbar: 0.4,\n    },\n    {\n      pageLink: '/faq',\n      view: FAQ,\n      displayName: 'About',\n      animationDelayForNavbar: 0.5,\n    },\n    {\n      pageLink: '/essentials',\n      view: Resources,\n      displayName: 'Essentials',\n      animationDelayForNavbar: 0.7,\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Route\n          render={({location}) => (\n            <div className=\"Almighty-Router\">\n              <Navbar pages={pages} />\n              <Banner />\n              <Route exact path=\"/\" render={() => <Redirect to=\"/\" />} />\n              <Switch location={location}>\n                {pages.map((page, i) => {\n                  return (\n                    <Route\n                      exact\n                      path={page.pageLink}\n                      component={page.view}\n                      key={i}\n                    />\n                  );\n                })}\n                <Redirect to=\"/\" />\n              </Switch>\n            </div>\n          )}\n        />\n      </Router>\n\n      <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n        {/* <img\n          src=\"/icon.png\"\n          alt=\"https://www.covid19india.org | Coronavirus cases live dashboard\"\n        />*/}\n\n        <h5>We stand with everyone fighting on the frontlines</h5>\n        <div className=\"link\">\n          <a\n            href=\"https://github.com/covid19india\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            covid19india\n          </a>\n        </div>\n        <a\n          href=\"https://github.com/covid19india/covid19india-react\"\n          className=\"button github\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.GitHub />\n          <span>Open Sourced on GitHub</span>\n        </a>\n        <a\n          className=\"button excel\"\n          href=\"https://bit.ly/patientdb\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.Database />\n          <span>Crowdsourced Patient Database&nbsp;</span>\n        </a>\n        <a\n          href=\"https://twitter.com/covid19indiaorg\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"button twitter\"\n          style={{justifyContent: 'center'}}\n        >\n          <Icon.Twitter />\n          <span>View updates on Twitter</span>\n        </a>\n        <a\n          href=\"https://bit.ly/covid19crowd\"\n          className=\"button telegram\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.MessageCircle />\n          <span>Join Telegram to Collaborate!</span>\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}